{
  "openapi": "3.0.0",
  "info": {
    "version": "0.5.0",
    "title": "Zinnext Auth Service",
    "contact": {
      "email": "example@example.io"
    }
  },
  "servers": [
    {
      "url": "http://localhost:9009/",
      "description": "Local Server"
    },
    {
      "url": "http://18.211.3.99:9009/",
      "description": "Dev Server"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "auth",
      "description": "Authentication Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Candidate",
      "description": "candidate Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Vendor",
      "description": "vendor Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Hotlist",
      "description": "hotlist Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "jobs",
      "description": "jobs Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "submissions",
      "description": "submission Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "dice",
      "description": "dice Operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/auth/verify": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Verify Email",
        "description": "Verify Email address",
        "operationId": "verify",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Email ID supplied"
          },
          "422": {
            "description": "User Validation Error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register with user credentials",
        "description": "Register with valid user credentials",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "422": {
            "description": "User Validation Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login with user credentials",
        "description": "Login with valid user credentials",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "422": {
            "description": "User Validation Error"
          }
        }
      }
    },
    "/auth/token/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh JWT Token",
        "description": "Refresh Authorization token using refresh_token",
        "operationId": "refresh",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "422": {
            "description": "User Validation Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get current user",
        "description": "Get current user details",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "User Unauthorised"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update the user in the system",
        "description": "Update the user in the system",
        "operationId": "updateUser",
        "requestBody": {
          "description": "Update the user data in the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "User Unauthorised"
          },
          "405": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete current user",
        "description": "Delete current user details from the system",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "User Unauthorised"
          },
          "405": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/user/menu": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get current user's menu roles",
        "description": "Get current user menu roles",
        "operationId": "getUserRoles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "User Unauthorised"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/candidates": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create a Candidate data",
        "description": "These data will split and save the both applicant and applicant professional Details.",
        "operationId": "addCanditate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CandidateDataRes"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Find All Candidate data",
        "description": "Used to create All Candidate data",
        "operationId": "getCandidate",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the all candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the all candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterApplicant"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/detailed-view": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate by id",
        "description": "To get the Candidate by id using the both quick view and detailed view.",
        "operationId": "updateCandidatebyId",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the detail and quick view of candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the detail and quick view of candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the detail and quick view of candidate",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicantsResponse"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/update": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate data",
        "description": "update a Candidate",
        "operationId": "updateCandidate",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId update the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId update the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Applicant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate Updated Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/update/basicdetails": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate basicdetails",
        "description": "update a Candidate basicdetails",
        "operationId": "updateCandidate-details",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the candidate basic details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the candidate basic details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the candidate basic details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantBasicdetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate Basic Details Updated Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/update/sae": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate skills and education",
        "description": "update a Candidate skills and education",
        "operationId": "updateCandidate-sae",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the candidate skills and education.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the candidate skills and education.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the candidate skills and education.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantSae"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate Skills and Experience Updated"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/update/ed": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate education detail",
        "description": "update a Candidate education detail",
        "operationId": "updateCandidate-ed",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the candidate education detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the candidate education detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the candidate education detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantEd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate Educational details Updated"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/push/sp": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate social profile",
        "description": "update a Candidate social profile",
        "operationId": "updateCandidate-sp",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the candidate social profile.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the candidate social profile.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the candidate social profile.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantSp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Social Profiles added Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/update/eeod": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate edit education detail",
        "description": "update a Candidate education detail",
        "operationId": "updateCandidate-eeod",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the education detail edit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the education detail edit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the education detail edit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantEeod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate EEO details Updated Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/actions/addtogroup": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate actions to group field",
        "description": "update requested group id to the field groupId",
        "operationId": "updateCandidate-id",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the add to group action in candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the add to group action in candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the add to group action in candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate group field details Updated Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/actions/todo": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create a Candidate actions",
        "description": "Used to create Candidate actions",
        "operationId": "addCandidate-actions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantTodo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate actions",
        "description": "update a Candidate actions",
        "operationId": "updateCandidate-todo",
        "parameters": [
          {
            "name": "remainderTo",
            "in": "query",
            "description": "remainderTo of Candidate to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the candidate actions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the candidate actions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the candidate actions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicantsTodo"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/actions/note": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create a Candidate actions note",
        "description": "Used to create Candidate actions note",
        "operationId": "addCandidateaction-note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Find Candidate actions note",
        "description": "Used to create Candidate actions note",
        "operationId": "getCandidate-note",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the candidate action notes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the candidate action notes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the candidate action notes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ApplicantNotes"
                      }
                    ]
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/actions/notify": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create a Candidate actions notify",
        "description": "Used to create Candidate actions notify",
        "operationId": "addCandidateaction-notify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicantNotifyReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Find a Candidate actions notify",
        "description": "Used to create Candidate actions notify",
        "operationId": "getCandidate-notify",
        "parameters": [
          {
            "name": "receiver",
            "in": "query",
            "description": "receiver of Candidate to fetch action notify.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the candidate action notify.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the candidate action notify.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the candidate action notify.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ApplicantNotify"
                      }
                    ]
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/actions/unsubscribe": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate unsubscribe actions",
        "description": "update a Candidate unsubscribe actions",
        "operationId": "updateCandidate-unsubscribe",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the unsubscribe action.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the unsubscribe action.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the unsubscribe action.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unSubscribeStatus",
            "in": "query",
            "description": "unSubscribeStatus of Candidate",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unsubscribe status Updated Successfully."
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/actions/blacklist": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Update a Candidate blacklist actions",
        "description": "update a Candidate blacklist actions",
        "operationId": "updateCandidate-blacklist",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the blacklist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the blacklist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the blacklist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Blacklist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Blacklist Updated Successfully."
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/filter": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Find a filtered Candidate data",
        "description": "Used to create Candidate data by filter",
        "operationId": "getApplicant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to filter the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to filter the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to filter the candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Filter-Applicant"
                      }
                    ]
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/sort": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Find a Candidate sorted data",
        "description": "Used to create a Candidate data by sort",
        "operationId": "getApplicantsort",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to sort candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to sort candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to sort candidate data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateSort"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Filter-Applicant"
                      }
                    ]
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/delete": {
      "put": {
        "tags": [
          "Candidate"
        ],
        "summary": "Delete a Candidate",
        "description": "Used to delete a Candidate.",
        "operationId": "deleteCandidate",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to delete candidate",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to delete candidate",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to delete candidate",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate Deleted Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/country": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get Candidate country list",
        "description": "Used to Get Candidate country list.",
        "operationId": "getCountry",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CandidateCountry"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/country/state": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get Candidate country and state list",
        "description": "Used to Get Candidate country and state list",
        "operationId": "getCountryState",
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "description": "Applicant countryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CandidateCountryState"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/country/state/city": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get Candidate country,state and city list",
        "description": "Used to Get Candidate country,state and city list.",
        "operationId": "getCountryStateCity",
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "description": "Applicant countryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "stateId",
            "in": "query",
            "description": "Applicant stateId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CandidateCountryStateCity"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/specialization": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate specialization",
        "description": "Used to Get Candidate specialization",
        "operationId": "getSpecialization",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CandidateSpecialization"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/qualification": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate qualification",
        "description": "Used to Get candidate qualification",
        "operationId": "getQualification",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CandidateQualification"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/countrycode": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate countrycode",
        "description": "Used to Get candidate countrycode",
        "operationId": "getCountrycode",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CandidateCountrycode"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/mailshare": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create a Candidate mailshare",
        "description": "Used to create Candidate mailshare",
        "operationId": "addCandidatemailshare",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidateEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Candidate mail Shared Successfully"
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/edit/detailed-view": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate edit detail",
        "description": "Used to Get candidate edit detail",
        "operationId": "getEditDetail",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Applicant collection Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the detail view.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the detail view.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the detail view.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "$ref": "#/components/schemas/CandidateEdit"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/search": {
      "post": {
        "tags": [
          "Candidate"
        ],
        "summary": "Create a Candidate search",
        "description": "Used to create Candidate search",
        "operationId": "addCandidatsearch",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to search candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to search candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to search candidate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CandidatesearchReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "$ref": "#/components/schemas/CandidateSearch"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/workauth": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate workauth",
        "description": "Used to Get candidate workauth",
        "operationId": "getworkauth",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidateworkauth"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/source": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate source",
        "description": "Used to Get candidate source",
        "operationId": "getsource",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidatesource"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/visatype": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate visatype",
        "description": "Used to Get candidate visatype",
        "operationId": "getvisatype",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidatevisatype"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/race": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate race",
        "description": "Used to Get candidate race",
        "operationId": "getrace",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidaterace"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/get/vendorcompanyname": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate vendorcompanyname",
        "description": "Used to Get candidate vendorcompany",
        "operationId": "getvendorcompany",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidatevendorcompany"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/candidates/get/vendorcontactDetails": {
      "get": {
        "tags": [
          "Candidate"
        ],
        "summary": "Get candidate vendorcontact",
        "description": "Used to Get candidate vendorcontact",
        "operationId": "getvendorcontact",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the vendor contact detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the vendor contact detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the vendor contact detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_id",
            "in": "query",
            "description": "Id of Candidate to fetch the vendor contact detail.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "applicants datas": {
                "schema": {
                  "$ref": "#/components/schemas/Candidatevendorcontact"
                }
              }
            }
          },
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Invalid response"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "description": "Internal server Error"
          }
        }
      }
    },
    "/vendor": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Create a vendor data",
        "description": "Used to create vendor data.",
        "operationId": "addVendor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Inserted Id sgsfjhfd12"
          },
          "422": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor",
        "description": "Used to get all Vendor data and sort them by their created date.",
        "operationId": "getVendor",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to find vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to find vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to find vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sort of vendor to find vendor data.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "old"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorHomeViewResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by id",
        "description": "Used to get specific vendor’s whole data.",
        "operationId": "getVendorid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "“Id” = vendor’s object-id/unique-id in string format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to find vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to find vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to find vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorQuickViewResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Deletes a Vendor by id",
        "description": "Used to delete the Requested vendor data.",
        "operationId": "deleteVendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "“Id” = vendor’s object-id/unique-id in string format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to delete the vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to delete the vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to delete the vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor has been deleted"
          },
          "400": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Update a Vendor by id",
        "description": "Used to update the Requested vendor data.",
        "operationId": "UpdateVendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "“Id” = vendor’s object-id/unique-id in string format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the vendor data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendor has been updated"
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/vendor/filter/gettechnologies": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by technologies",
        "description": "Used to get all vendor’s Technologies data.",
        "operationId": "getVendortechnologies",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the technologies.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the technologies.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the technologies.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": [
                    "C++",
                    "testing",
                    "Testing",
                    "golang",
                    "python",
                    "java",
                    "react"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/filter": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by filter",
        "description": "Used to filter the Vendor Data. SortMethodId value should be 1 for “Ascending” Sort Method. sortMethodId value should be -1 for “Descending” Sort Method.",
        "operationId": "getVendor filter",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to filter the vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to filter the vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to filter the vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VendorHomeViewResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/filter/getavailabledetails": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by technologies",
        "description": "Used to get Vendor Filter’s Available details dropdown values.",
        "operationId": "getVendordetails",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": [
                    "Vendor company",
                    "Technologies",
                    "Contact Person",
                    "Contact Number",
                    "Email"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vendor/country": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by country",
        "description": "Used to Find vendor by country.",
        "operationId": "getVendor country",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vendorCountry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/country/state": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by country and state",
        "description": "Used to Find vendor by country and state.",
        "operationId": "getVendor countrystate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorCountryStateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vendorCountryState"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/country/state/city": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by country, state and city",
        "description": "Used to Find vendor by country state and city.",
        "operationId": "getVendor countrystatecity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorCountryStateCityReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vendorCountryStatecity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/countrycode": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find vendor by countrycode",
        "operationId": "getVendor countrycode",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vendorCountrycode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/edit/get/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get vendor Edit by id",
        "description": "Provide data for vendor edit page.",
        "operationId": "getVendorEdit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "“Id” = vendor’s object-id/unique-id in string format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the vendor by id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the vendor by id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the vendor by id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorEditView"
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/share": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "vendorEmail.",
        "description": "Used to create VendorEmail data.",
        "operationId": "getVendorEmail",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the share.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorEmailData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Vendor Shared Successfully"
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vendor/search": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "vendorSearch",
        "description": "Used to Search the Vendor Data. “sortMethodId”is 1 for “ascending”, -1 for descending.",
        "operationId": "getVendorSearch",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the vendor search.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the vendor search.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the vendor search.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sort of vendor to update the vendor search",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "old"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorSearchReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorSearch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/hotlist": {
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Create a Hotlist data",
        "description": "Used to create Hotlist data.",
        "operationId": "addHotlist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotlistCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Hotlist added successfully"
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Update a Hotlist data",
        "description": "Used to update a Hotlist data",
        "operationId": "updateHotlist",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "id of Hotlist to update the data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotlistUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hotlist Updated Successfully"
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get all Hotlist data",
        "description": "Used to get all hotlist data from hotlists collection.",
        "operationId": "UpdateHotlist",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the hotlist data from collection.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the hotlist data from collection.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the hotlist data from collection.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sort by Holtlist data.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "old"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/HotlistGroup"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/filter": {
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Filter the Hotlist data",
        "description": "Used to filter the Hotlist data from Mongodb collection.",
        "operationId": "getHotlist",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to Filter the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to Filter the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to Filter the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sort of hotlist data.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "new",
                "old"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotlistFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HotlistFilter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/delete": {
      "put": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Delete the Hotlist data",
        "description": "Used to change the status false from isDeleted field in Mongodb collection.",
        "operationId": "deleteHotlist",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "Id of Hotlist to delete the data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to delete the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to delete the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to delete the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotlist Deleted Successfully"
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/notify": {
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Create a Notify Hotlist data",
        "description": "Used to create Notify-Hotlist data.",
        "operationId": "addNotify-Hotlist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Hotlist notified successfully"
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/sort": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Sort the Hotlist data",
        "description": "Used to sort the Hotlist data in oldest or newest.",
        "operationId": "getHotlistbysort",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to sort the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to sort the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to sort the Hotlist data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SortRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HotlistFilter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/visatype": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get  Hotlist Visatype list.",
        "description": "Used to get  hotlist Visatype from hotlists collection.",
        "operationId": "UpdateHotlistVisatype",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/HotlistVisaType"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/countrycode": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get  Hotlist Countrycode list.",
        "description": "Used to get  hotlist Countrycode from hotlists collection.",
        "operationId": "UpdateHotlistCountrycode",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/HotlistCountryCode"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/edit/get": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get  Hotlist Edit.",
        "description": "Used to get  hotlist Edit from hotlists collection.",
        "operationId": "GetHotlistedit",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "id of Hotlist update the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the Hotlist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "datas": {
                "schema": {
                  "$ref": "#/components/schemas/HotlistEdit"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/getemail": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get  Hotlist Email.",
        "description": "Used to get  hotlist Email from hotlists collection.",
        "operationId": "GetHotlistEmail",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "id of Hotlist to fetch the email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "datas": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/HotlistEmail"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Create a  HotlistEmail data",
        "description": "Used to create HotlistEmail data.",
        "operationId": "getHotlistEmail",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the hotlist email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the hotlist email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the hotlist email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotlistEmailData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Hotlist Shared Successfully"
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/search": {
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Create a  HotlistSearch data",
        "description": "Used to create HotlistSearch data.",
        "operationId": "getHotlistSearch",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to create the hotlist search.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to create the hotlist search.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to create the hotlist search.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotlistSearchReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HotlistSearch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/filter/getlocations": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get  Hotlist locations.",
        "description": "Used to get  hotlist locations from hotlists collection.",
        "operationId": "GetHotlistlocations",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "id of Hotlist to fetch the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "datas": {
                "schema": {
                  "$ref": "#/components/schemas/HotlistLocation"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotlist/filter/getskills": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get  Hotlist skills.",
        "description": "Used to get  hotlist skills from hotlists collection.",
        "operationId": "GetHotlistskills",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "id of Hotlist to fetch the skills.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the skills.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the skills.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the skills.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "datas": {
                "schema": {
                  "$ref": "#/components/schemas/HotlistSkills"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jobs": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Create a new Job",
        "description": "Used to Create a new Job",
        "operationId": "createJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "404": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      },
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get all job.",
        "description": "Used to get all job data Job status are active, unassigned, inactive and  drafts tabs, active have unread,inprogress Partially Fulfilled and Fulfilled sub-tabs,respectively inactive have on hold and closed sub tabs.",
        "operationId": "getAllJob",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "Id of job fetched all jobs; Note:- Used to get job by id, need to use jobId parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetched the all job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetched the all job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetched the all job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "jobStatus to fetched the all job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobRecruitmentStatus",
            "in": "query",
            "description": "jobRecruitmentStatus to fetched the all job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit of job.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/client": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Create a client.",
        "description": "used to Create a client.",
        "operationId": "createClient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobClientReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobClientRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "404": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/clientcontact/{id}": {
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Create the client contacts from client.",
        "description": "Used to Create the Client Contacts from Client.",
        "operationId": "Createclient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of job to update client contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update client contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update client contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update client contact",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/check/clientjobid": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Find client Job Id exist validation.",
        "description": "Used to Find client Job Id exist validation.",
        "operationId": "getClientjobid",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "Id of tenant to fetch client job check.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch client job check.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch client job check.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientJobRefrenceId",
            "in": "query",
            "description": "clientJobRefrenceId to fetch client job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientJobRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/check/clientname": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Find client name exist validation.",
        "description": "Used to Find client name exist validation.",
        "operationId": "getClientname",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "Id of tenant to fetch the client check.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the client.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the client.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientName",
            "in": "query",
            "description": "clientName to fetch the client data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientNameRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/get/clientname": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Client Name List.",
        "description": "Used to Get Client Name List.",
        "operationId": "getClientnamelist",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "Id of tenant to fetch the clientname list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the clientname list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the clientname list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/clientNameListRes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/get/clientcontact/{id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Find  client contact list by id.",
        "description": "Used to Find  client contact list by id.",
        "operationId": "getClientcontactlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of job to fetch the client contact",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the client contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the client contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the client contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientContact"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/clientcontact/countrycode": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Find  client contact country code.",
        "description": "Used to Find  client contact country code.",
        "operationId": "getcountrycode",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/clientCountrycode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/clientcontact/clientname/{id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Find client contact and client name list by id.",
        "description": "Used to Find client contact and client name list by id.",
        "operationId": "getClientContactandName",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of job to fetch client contact and name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId of job to fetch client contact and name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId of job to fetch client contact and name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId of job to fetch client contact and name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientName"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/get/{role}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get user Role →recruiter or manager.",
        "description": "Used to Get user Role →recruiter or manager.",
        "operationId": "getRole",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "Get user Role →recruiter or manager.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/edit/detailed-view/{jobId}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Edit job details by jobId.",
        "description": "Used to Edit job details .",
        "operationId": "getEdit",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Id of job to fetch the detail view of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the detail view of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the detail view of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the detail view of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobdetail"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/edit/{id}": {
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Edit the job.",
        "description": "Used to Edit the job.",
        "operationId": "Editjob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of job to edit job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditJobReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditJobRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/assign/view/{id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get assign job view by jobId.",
        "description": "Used to Get assign job view by jobId.",
        "operationId": "getAssign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "jobId to fetch the assign jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the assign jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the assign jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the assign jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobAssign"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/assign": {
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Update assign job view by jobId.",
        "description": "Used to Update assign job view by jobId.",
        "operationId": "UpdateAssign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/notes": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Create a job notes.",
        "description": "Used to Create a job notes.",
        "operationId": "createNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobNotesReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobNotesRes"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jobs/detailedview/edit/jobdescription": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Edit detailed view job descriptions.",
        "description": "Used to Edit detailed view job descriptions.",
        "operationId": "EditJobdescription",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "id of job to update the job descriptions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the job descriptions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the job descriptions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the job descriptions.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId of the zinnxt user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobdescriptionReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobdescriptionRes"
                }
              }
            }
          },
          "422": {
            "description": "Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jobs/detailedview/edit/organizationaldetails": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Edit detailed view organizational details.",
        "description": "Used to Edit detailed view organizational details.",
        "operationId": "Editorganizationaldetails",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "id of job to update the organizationaldetails.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the organizationaldetails.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the organizationaldetails.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the organizationaldetails.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId of the zinnxt user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organizationaldetailsReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organizationaldetailsReqRes"
                }
              }
            }
          },
          "422": {
            "description": "Error Message"
          },
          "500": {
            "description": "Error Message"
          }
        }
      }
    },
    "/jobs/detailedview/edit/clientdetails": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Edit detailed view client details.",
        "description": "Used to Edit detailed view client details.",
        "operationId": "EditClientdetails",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "id of job to update the client details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the client details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the client details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the client details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId of the zinnxt user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clientDetailsReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientDetailsRes"
                }
              }
            }
          },
          "422": {
            "description": "Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jobs/detailedview/edit/otherdetails": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Edit Other Details from detailed view.",
        "description": "Used to Edit Other Details from detailed view.",
        "operationId": "EditOtherdetails",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "id of job to edit the other details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to edit the other details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to edit the other details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to edit the other details.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId of the zinnxt user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/otherDetailsReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/otherDetailsRes"
                }
              }
            }
          },
          "422": {
            "description": "Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jobs/reminder": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Update the job's reminder.",
        "description": "Used to Update the job's reminder.",
        "operationId": "UpdateRemainder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reminderReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reminderRes"
                }
              }
            }
          },
          "422": {
            "description": "Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jobs/detailedview/edit/description": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Shows only job description for detailed view.",
        "description": "Used to Get Shows only job description for detailed view.",
        "operationId": "getJobDescription",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the description.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the description.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the description.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "jobs id to update the description.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobDescription"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/source/hiring-candidate-list": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Update the search of hiring-candidate-list.",
        "description": "Used to Update the search of hiring-candidate-list.",
        "operationId": "UpdateHiringCandidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HiringCandidateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HiringCandidateRes"
                }
              }
            }
          },
          "422": {
            "description": "Error Message"
          },
          "500": {
            "description": "Error Message"
          }
        }
      }
    },
    "/jobs/source/hiringStgUpdate": {
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Update applicant's Hiring stage.",
        "description": "Used to Update Hiring stage.",
        "operationId": "UpdateHiringStage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HiringReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HiringRes"
                }
              }
            }
          },
          "422": {
            "description": "Error Message"
          },
          "500": {
            "description": "Error Message"
          }
        }
      }
    },
    "/jobs/statusupdate": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Update Job Status.",
        "description": "Used to  Update Job Status.",
        "operationId": "UpdateStatus",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the status of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the status of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the status of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "jobs id to update the status of job.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId of the zinnxt user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message",
            "content": {
              "400 responsedata": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid Request"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/screening/update": {
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Update screening stage.",
        "description": "Used to Update screening stage.",
        "operationId": "UpdateScreeningStage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScreeningReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreeningRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/screening/response-types": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Used to get job screening responses types.",
        "description": "Used to get job screening responses types.",
        "operationId": "getScreningRes",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Screeningtype"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/email/get-mail-details": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Used to get mail details.",
        "description": "Used to get mail details.",
        "operationId": "getmaildetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/maildetailsreq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maildetails"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/joblist": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job list.",
        "description": "Used to  Get Job list.",
        "operationId": "Getjoblist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobListReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobListRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/communication-timeline": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Used to get communication timeline.",
        "description": "Used to get communication timeline.",
        "operationId": "getcommunication",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/communicationRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/updatecall": {
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Update the call.",
        "description": "Used to Update the call.",
        "operationId": "UpdateCall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatecallReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updatecallRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/tablist": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Used to get job tablist.",
        "description": "Used to get job tablist.",
        "operationId": "gettablist",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to update the tablist of jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to update the tablist of jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to update the tablist of jobs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tablistRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/jobs/emaildetails": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job email details.",
        "description": "Used to  Get Job email details.",
        "operationId": "GetjobEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobEmailReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobEmailRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/submission-detail-view/{submissionId}": {
      "get": {
        "tags": [
          "submissions"
        ],
        "summary": "Used to get job submission detail view.",
        "description": "Used to get job submission detail view.",
        "operationId": "getsubmission-detail-view",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "description": "submissionId to fetch the submission view.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/submissionDetailView"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/submissions/create": {
      "post": {
        "tags": [
          "submissions"
        ],
        "summary": "create a new submission.",
        "description": "Used to create a new submission.",
        "operationId": "CreateSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/submissionReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/submissionRes"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/submission-list": {
      "get": {
        "tags": [
          "submissions"
        ],
        "summary": "Used to get submission list.",
        "description": "Used to get get submission lis.",
        "operationId": "getsubmissionList",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId to fetch the submission list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessId",
            "in": "query",
            "description": "businessId to fetch the submission list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "description": "businessUnitId to fetch the submission list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "sourceType to fetch the submission list.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId to fetch the submission list.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/submissionList"
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "422": {
            "description": "Error message"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "dice"
        ],
        "summary": "Used to fetch dice login.",
        "description": "Used to fetch dice login.",
        "operationId": "getLogin",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dicelogin"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": [
          "dice"
        ],
        "summary": "create a dice search.",
        "description": "Used to create a dice search.",
        "operationId": "createSearch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/diceSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diceSearchRes"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "dice"
        ],
        "summary": "Used to fetch the profile.",
        "description": "Used to fetch the profile.",
        "operationId": "getProfile",
        "parameters": [
          {
            "name": "candidateId",
            "in": "query",
            "description": "candidateId to fetch the profile.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bearerToken",
            "in": "query",
            "description": "bearerToken to fetch the profile.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/diceprofile"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Register": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "user_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "user_pwd": {
            "type": "string"
          },
          "org_id": {
            "type": "integer"
          },
          "role_id": {
            "type": "integer"
          }
        }
      },
      "Login": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "user_pwd": {
            "type": "string"
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "required": [
          "refresh_token",
          "id"
        ],
        "properties": {
          "refresh_token": {
            "type": "string"
          },
          "user_id": {
            "type": "integer"
          }
        }
      },
      "LoginResp": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "sdgsdfhi2364h2rbfdf=="
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "user_name": {
            "type": "string",
            "example": "User 01"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "user_pwd": {
            "type": "string",
            "example": "12345"
          },
          "created_dt": {
            "type": "string",
            "example": "2022-09-11T13:08:42+05:30"
          },
          "updated_dt": {
            "type": "string",
            "example": "2022-09-11T13:08:42+05:30"
          }
        }
      },
      "Menu": {
        "type": "object",
        "properties": {
          "menu": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "example": "Dashboard"
                },
                "key": {
                  "type": "string",
                  "example": "dashboard"
                },
                "icon": {
                  "type": "string",
                  "example": "ZinDashboard"
                },
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Dashboard"
                      },
                      "key": {
                        "type": "string",
                        "example": "dashboard"
                      },
                      "icon": {
                        "type": "string",
                        "example": "ZinDashboard"
                      }
                    }
                  }
                }
              }
            }
          },
          "footer-menu": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "example": "Settings"
                },
                "key": {
                  "type": "string",
                  "example": "settings"
                },
                "icon": {
                  "type": "string",
                  "example": "ZinSettings"
                },
                "children": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "CandidateData": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f61"
          },
          "businessId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "applicantRefrenceId": {
            "type": "string",
            "example": 12
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "vendorComments": {
            "type": "string",
            "example": "test vendor comments"
          },
          "vendorContact": {
            "$ref": "#/components/schemas/vendorcontacts"
          },
          "resume": {
            "properties": {
              "uploadedFileName": {
                "type": "string",
                "example": "test uploadedFileName"
              },
              "uniqueName": {
                "type": "string",
                "example": "test uniqueName"
              },
              "location": {
                "type": "string",
                "example": "path of the file"
              }
            }
          },
          "photo": {
            "properties": {
              "uploadedFileName": {
                "type": "string",
                "example": "photothurscpu"
              },
              "uniqueName": {
                "type": "string",
                "example": "uniquephotothurscpu"
              },
              "location": {
                "type": "string",
                "example": "path of the file"
              }
            }
          },
          "designation": {
            "type": "string",
            "example": "java developer"
          },
          "firstName": {
            "type": "string",
            "example": "naveentoday123thurscpu"
          },
          "lastName": {
            "type": "string",
            "example": "mk123thurscpu"
          },
          "email": {
            "type": "string",
            "example": "naveentoday123@gmailthurscpu.com"
          },
          "contactsCountryCode": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "contactNumber": {
            "type": "string",
            "example": 3432543534
          },
          "dateOfBirth": {
            "type": "string",
            "example": "MM-DD-YYYY"
          },
          "address": {
            "properties": {
              "line1": {
                "type": "string",
                "example": "mylinethurscpu"
              },
              "line2": {
                "type": "string",
                "example": "mylinethurscpu"
              },
              "city": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "state": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "country": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "pincode": {
                "type": "string",
                "example": 629204
              }
            }
          },
          "visaExpiryDate": {
            "type": "string",
            "example": "MM-DD-YYYY"
          },
          "source": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ratings"
            }
          },
          "skills": {
            "type": "string",
            "example": [
              "java",
              "golang"
            ]
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "domain": {
            "type": "string",
            "example": [
              "domainthurscpu"
            ]
          },
          "workExperience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workexperience"
            }
          },
          "educationDetails": {
            "items": {
              "properties": {
                "currentStudyingHere": {
                  "type": "boolean",
                  "example": false
                },
                "educationType": {
                  "type": "string",
                  "example": "direct education"
                },
                "endDate": {
                  "type": "string",
                  "example": "06-05-2012"
                },
                "grade": {
                  "type": "integer",
                  "format": "int32",
                  "example": 4
                },
                "institutionName": {
                  "type": "string",
                  "example": "abc Institute of Technology"
                },
                "qualification": {
                  "type": "string",
                  "example": "Btech"
                },
                "specialization": {
                  "type": "string",
                  "example": "information technology"
                },
                "startDate": {
                  "type": "string",
                  "example": "02-03-2008"
                },
                "university": {
                  "type": "string",
                  "example": "Kanpur university"
                }
              }
            }
          },
          "socialProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialProfiles"
            }
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "race": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "veteranStatus": {
            "type": "string",
            "example": "veteranStatusthurscpu"
          },
          "disabilityStatus": {
            "type": "string",
            "example": "no"
          },
          "visa": {
            "$ref": "#/components/schemas/Candidatevisa"
          },
          "preferredLocation": {
            "type": "array",
            "example": [
              "bangalore",
              "chennai",
              "pune"
            ]
          },
          "preferredJobTitle": {
            "type": "string",
            "example": "sr.python developer"
          },
          "preferredJobType": {
            "type": "array",
            "example": [
              "WFH"
            ]
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "alternateVisa": {
            "$ref": "#/components/schemas/AlternateVisa"
          },
          "passport": {
            "$ref": "#/components/schemas/Candidatepassport"
          },
          "documents": {
            "type": "array",
            "example": []
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f22"
          }
        }
      },
      "CandidateDataRes": {
        "type": "string",
        "example": "Candidate added successfully"
      },
      "ratings": {
        "properties": {
          "label": {
            "type": "string",
            "example": "communication"
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "example": 25
          }
        }
      },
      "contacts": {
        "properties": {
          "type": {
            "type": "string",
            "example": "c2cthurscpu"
          },
          "countryCode": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "number": {
            "type": "string",
            "example": "2323232323thurscpu"
          }
        }
      },
      "tags": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "int32"
        },
        "example": [
          "aaathurscpu",
          "bbbbthurscpu",
          "ccccthurscpu"
        ]
      },
      "GroupId": {
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          }
        }
      },
      "WorkExperience": {
        "properties": {
          "companyName": {
            "type": "string",
            "example": "realtekhthurscpu"
          },
          "jobTitle": {
            "type": "string",
            "example": "golang developerthurscpu"
          },
          "startDate": {
            "type": "string",
            "example": "02-03-1999"
          },
          "endDate": {
            "type": "string",
            "example": "03-06-2000"
          },
          "currentEmployerStatus": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "SocialProfiles": {
        "properties": {
          "type": {
            "type": "string",
            "example": "githubthurscpu"
          },
          "value": {
            "type": "string",
            "example": 23
          }
        }
      },
      "Candidatevisa": {
        "properties": {
          "visaNumber": {
            "type": "string",
            "example": 321432424
          },
          "visaType": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "visaExpiryDate": {
            "type": "string",
            "example": "02-06-2023"
          },
          "visaCountryId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "visaUniqueName": {
            "type": "string",
            "example": "visa.pdf"
          },
          "visaCopyUniqueName": {
            "type": "string",
            "example": "02-06-2023.pdf"
          },
          "visaCopyLocation": {
            "type": "string",
            "example": "www.s3/02-06-2023.pd"
          }
        }
      },
      "AlternateVisa": {
        "properties": {
          "alternateVisaNumber": {
            "type": "string",
            "example": 321432424
          },
          "alternateVisaExpiryDate": {
            "type": "string",
            "example": "02-06-2023"
          },
          "alternateVisaCountryId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "alternateVisaUploadName": {
            "type": "string",
            "example": "visa.pdf"
          },
          "alternateVisaCopyUniqueName": {
            "type": "string",
            "example": "02-06-2023.pdf"
          },
          "alternateVisaCopyLocation": {
            "type": "string",
            "example": "www.s3/02-06-2023.pd"
          }
        }
      },
      "Candidatepassport": {
        "properties": {
          "passportNumber": {
            "type": "string",
            "example": 321432424
          },
          "passportExpiryDate": {
            "type": "string",
            "example": "02-06-2023"
          },
          "passportCountryId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "passportUploadName": {
            "type": "string",
            "example": "passpor.pdf"
          },
          "passportCopyUniqueName": {
            "type": "string",
            "example": "02-06-2023.pdf"
          },
          "passportCopyLocation": {
            "type": "string",
            "example": "www.s3/02-06-2023.pd"
          }
        }
      },
      "Applicant": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "vendorComments": {
            "type": "string",
            "example": "test vendor comments"
          },
          "vendorContact": {
            "$ref": "#/components/schemas/VendorContact"
          },
          "resume": {
            "properties": {
              "uploadedFileName": {
                "type": "string",
                "example": "test uploadedFileName"
              },
              "uniqueName": {
                "type": "string",
                "example": "test uniqueName"
              },
              "location": {
                "type": "string",
                "example": "path of the file"
              }
            }
          },
          "photo": {
            "properties": {
              "uploadedFileName": {
                "type": "string",
                "example": "photothurscpu"
              },
              "uniqueName": {
                "type": "string",
                "example": "uniquephotothurscpu"
              },
              "location": {
                "type": "string",
                "example": "path of the file"
              }
            }
          },
          "designation": {
            "type": "string",
            "example": "java developer"
          },
          "firstName": {
            "type": "string",
            "example": "naveen"
          },
          "lastName": {
            "type": "string",
            "example": "doss"
          },
          "email": {
            "type": "string",
            "example": "fdsfsdfs@gmailthurscpu.com"
          },
          "contactCountryCode": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "contactNumber": {
            "type": "string",
            "example": 23423423
          },
          "dateOfBirth": {
            "type": "string",
            "example": "03-06-2000"
          },
          "address": {
            "properties": {
              "line1": {
                "type": "string",
                "example": "mylinethurscpu"
              },
              "line2": {
                "type": "string",
                "example": "mylinethurscpu"
              },
              "city": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "state": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "country": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "pincode": {
                "type": "string",
                "example": 629204
              }
            }
          },
          "visaExpiryDate": {
            "type": "string",
            "example": "MM-DD-YYYY"
          },
          "source": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ratings"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "mobile testing",
              "java",
              "golang"
            ]
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "domain": {
            "type": "string",
            "example": [
              "domainasasthurscpu"
            ]
          },
          "workExperience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperience"
            }
          },
          "educationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationDetails"
            }
          },
          "socialProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialProfiles"
            }
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "race": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "veteranStatus": {
            "type": "string",
            "example": "veteranStatusthurscpu"
          },
          "disabilityStatus": {
            "type": "string",
            "example": "no"
          },
          "visa": {
            "$ref": "#/components/schemas/Candidatevisa"
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "alternateVisa": {
            "$ref": "#/components/schemas/AlternateVisa"
          },
          "passport": {
            "$ref": "#/components/schemas/Candidatepassport"
          },
          "documents": {
            "type": "array",
            "example": []
          },
          "updatedBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f22"
          }
        }
      },
      "VendorContact": {
        "properties": {
          "contactCountryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "contactNumber": {
            "type": "string",
            "example": 67854232343
          },
          "email": {
            "type": "string",
            "example": "realtekemailfryday@gmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "hotlistrealtekfryday"
          },
          "lastName": {
            "type": "string",
            "example": "realtekfirstnamefryday"
          },
          "vendorContactIsDeleted": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ApplicantSae": {
        "properties": {
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "mobile testing",
              "java",
              "golang"
            ]
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "domain": {
            "type": "string",
            "example": [
              "domainthurscpu"
            ]
          },
          "workExperience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperience"
            }
          },
          "certification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/certification"
            }
          }
        }
      },
      "certification": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "certificateName": {
            "type": "string",
            "example": "testcertificateName"
          },
          "certificateNumber": {
            "type": "string",
            "example": "certificateNumber123"
          },
          "institutionName": {
            "type": "string",
            "example": "tcs"
          }
        }
      },
      "ApplicantEd": {
        "properties": {
          "educationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationDetails"
            }
          }
        }
      },
      "ApplicantSp": {
        "properties": {
          "socialProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialProfiles"
            }
          }
        }
      },
      "ApplicantEeod": {
        "properties": {
          "gender": {
            "type": "string",
            "example": "male"
          },
          "race": {
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "value": {
                "type": "string",
                "example": "racevaluethurscpu"
              }
            }
          },
          "veteranStatus": {
            "type": "string",
            "example": "veteranStatusthurscpu"
          },
          "disabilityStatus": {
            "type": "string",
            "example": "no"
          }
        }
      },
      "ApplicantTodo": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f61"
          },
          "businessId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "creatorComments": {
            "type": "string",
            "example": "testComments"
          },
          "actionDateTime": {
            "type": "string",
            "example": "2023-01-19T07:01:12.274Z"
          },
          "job": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f22"
          },
          "remainderTo": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f69"
          },
          "candidate": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f70"
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f71"
          }
        }
      },
      "ApplicantsTodo": {
        "properties": {
          "candidateFirstName": {
            "type": "string",
            "example": "kasi"
          },
          "candidateLastName": {
            "type": "string",
            "example": "ram"
          },
          "actionDateTime": {
            "type": "string",
            "example": "2023-01-19T07:01:12.274Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-31T12:02:37.921Z"
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f71"
          },
          "creatorComments": {
            "type": "string",
            "example": "testComments"
          },
          "job": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f22"
          }
        }
      },
      "ApplicantNote": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "businessId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "creatorComments": {
            "type": "string",
            "example": "testComments"
          },
          "candidate": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f22"
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f71"
          }
        }
      },
      "ApplicantNotify": {
        "properties": {
          "candidateFirstName": {
            "type": "string",
            "example": "naveen"
          },
          "candidateLastName": {
            "type": "string",
            "example": "mk"
          },
          "creatorComments": {
            "type": "string",
            "example": "testComments"
          },
          "receiver": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-31T12:02:37.921Z"
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f71"
          }
        }
      },
      "ApplicantNotes": {
        "properties": {
          "candidateFirstName": {
            "type": "string",
            "example": "naveen"
          },
          "candidateLastName": {
            "type": "string",
            "example": "mk"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-31T12:02:37.921Z"
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f71"
          },
          "creatorComments": {
            "type": "string",
            "example": "testComments"
          }
        }
      },
      "ApplicantNotifyReq": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "businessId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "candidate": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f64"
          },
          "createdBy": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f71"
          },
          "creatorComments": {
            "type": "string",
            "example": "testComments"
          },
          "receiver": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          }
        }
      },
      "Blacklist": {
        "properties": {
          "blacklist": {
            "properties": {
              "blackListedNotes": {
                "type": "string",
                "example": "testBlacklist"
              },
              "blackListedStatus": {
                "type": "boolean",
                "example": true
              },
              "blackListedType": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "blockListedUntill": {
                "properties": {
                  "blackListedBy": {
                    "type": "string",
                    "example": "63cfc32f7d754759b288d999"
                  },
                  "blackListedFrom": {
                    "type": "string",
                    "example": "1901-01-01T00:00:00.000Z"
                  },
                  "blackListedTo": {
                    "type": "string",
                    "example": "1901-01-01T00:00:00.000Z"
                  }
                }
              }
            }
          }
        }
      },
      "Filter": {
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              3
            ]
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "jobTitle": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "java developer",
              "java developer123"
            ]
          },
          "location": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              2
            ]
          },
          "workAuthorization": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              2
            ]
          },
          "workExperienceFrom": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "workExperienceTo": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "currentCompanyName": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tcs"
            ]
          },
          "currentJobTitle": {
            "items": {
              "type": "string"
            },
            "example": [
              "java developer"
            ]
          },
          "previousCompanyName": {
            "items": {
              "type": "string"
            },
            "example": [
              "hcl"
            ]
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "mobile testing",
              "java",
              "golang"
            ]
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "source": {
            "items": {
              "type": "integer"
            },
            "example": [
              4
            ]
          },
          "addedBy": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afh"
          },
          "university": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "anna university",
              "mgr university"
            ]
          },
          "degree": {
            "type": "integer",
            "example": [
              4
            ]
          },
          "socialProfiles": {
            "items": {
              "type": "string"
            },
            "example": [
              "github"
            ]
          },
          "documents": {
            "items": {
              "type": "string"
            },
            "example": [
              "visa"
            ]
          },
          "availableDetails": {
            "type": "object",
            "properties": {
              "Contact": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "domain": {
            "items": {
              "type": "string"
            },
            "example": [
              "test"
            ]
          },
          "gender": {
            "items": {
              "type": "string"
            },
            "example": [
              "male"
            ]
          },
          "race": {
            "items": {
              "type": "string"
            },
            "example": [
              "test"
            ]
          },
          "veteranStatus": {
            "items": {
              "type": "string"
            },
            "example": [
              "veteranStatus"
            ]
          },
          "disability": {
            "items": {
              "type": "string"
            },
            "example": [
              "no"
            ]
          }
        }
      },
      "status": {
        "properties": {
          "recentlySubmitted": {
            "type": "boolean",
            "example": true
          },
          "new": {
            "type": "boolean",
            "example": true
          },
          "blacklistedProfiles": {
            "type": "boolean",
            "example": true
          },
          "placedProfiles": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Filter-Applicant": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "63f5fd4d9ec096750088bfe2"
          },
          "createdBy": {
            "type": "string",
            "example": "63f5fd4d9ec096750088bfa3"
          },
          "firstName": {
            "type": "string",
            "example": "Mohammad M"
          },
          "lastName": {
            "type": "string",
            "example": "Islam"
          },
          "photo": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "example": "path of the file"
              },
              "uniqueName": {
                "type": "string",
                "example": "www"
              },
              "uploadedFileName": {
                "type": "string",
                "example": "wwqwq"
              }
            }
          },
          "professionalDetailAddress": {
            "type": "object",
            "properties": {
              "city": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "country": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "line1": {
                "type": "string",
                "example": "test line1"
              },
              "line2": {
                "type": "string",
                "example": "test line2"
              },
              "pincode": {
                "type": "string",
                "example": 343423
              },
              "state": {
                "type": "integer",
                "format": "int32",
                "example": 3
              }
            }
          },
          "professionalDetailWorkExperience": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "example": "realtekh"
                },
                "currentEmployerStatus": {
                  "type": "boolean",
                  "example": false
                },
                "endDate": {
                  "type": "string",
                  "example": "02-03-2009"
                },
                "jobTitle": {
                  "type": "string",
                  "example": "java developer123"
                },
                "startDate": {
                  "type": "string",
                  "example": "02-03-1999"
                }
              }
            }
          },
          "ratings": {
            "type": "integer",
            "example": 5
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "mobile testing",
                "ios",
                "android"
              ]
            }
          },
          "submissionDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "submissionAt": {
                  "type": "string",
                  "format": "2023-01-19T00:00:00.000Z"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "wewe"
            }
          },
          "submittedTime": {
            "type": "string",
            "example": "1 months ago"
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 2
          }
        }
      },
      "CandidateSort": {
        "type": "object",
        "properties": {
          "recentlySubmitted": {
            "type": "boolean",
            "example": true
          },
          "recentlyUpdated": {
            "type": "boolean",
            "example": true
          },
          "rating": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ApplicantBasicdetails": {
        "properties": {
          "firstName": {
            "type": "string",
            "example": "naveen"
          },
          "lastName": {
            "type": "string",
            "example": "mk"
          },
          "email": {
            "type": "string",
            "example": "naveen@gmail.com"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "03-05-1999"
          },
          "workAuthorization": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "visaExpiryDate": {
            "type": "string",
            "example": "03-06-2023"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contacts"
            }
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Documents"
            }
          },
          "resume": {
            "properties": {
              "location": {
                "type": "string",
                "example": "path of the file"
              },
              "uniqueName": {
                "type": "string",
                "example": "uniqueNamethurscpu"
              },
              "uploadedFileName": {
                "type": "string",
                "example": "resumethurscpu"
              }
            }
          }
        }
      },
      "documents": {
        "type": "object",
        "properties": {
          "documentCopyLocation": {
            "type": "string",
            "example": "www.s3/02-06-2023.pdf"
          },
          "documentCopyUniqueName": {
            "type": "string",
            "example": "02-06-2023.pdf"
          },
          "documentCountry": {
            "type": "string",
            "example": "Algeria"
          },
          "documentName": {
            "type": "string",
            "example": "visa"
          },
          "documentNumber": {
            "type": "string",
            "example": 321432424
          },
          "documentUploadName": {
            "type": "string",
            "example": "visa.pdf"
          },
          "expiryDate": {
            "type": "string",
            "example": "MM-DD-YYYY"
          },
          "documentType": {
            "type": "string",
            "example": "GC AED"
          }
        }
      },
      "Documents": {
        "type": "object",
        "properties": {
          "documentCopyLocation": {
            "type": "string",
            "example": "www.s3/02-06-2023.pdf"
          },
          "documentCopyUniqueName": {
            "type": "string",
            "example": "02-06-2023.pdf"
          },
          "documentCountry": {
            "type": "string",
            "example": "Algeria"
          },
          "documentName": {
            "type": "string",
            "example": "visa"
          },
          "documentNumber": {
            "type": "string",
            "example": 321432424
          },
          "documentUploadName": {
            "type": "string",
            "example": "visa.pdf"
          },
          "expiryDate": {
            "type": "string",
            "example": "MM-DD-YYYY"
          },
          "documentId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          }
        }
      },
      "EducationDetails": {
        "type": "object",
        "properties": {
          "currentStudyingHere": {
            "type": "boolean",
            "example": false
          },
          "educationType": {
            "type": "string",
            "example": "distance education"
          },
          "endDate": {
            "type": "string",
            "example": "MM-DD-YYYY"
          },
          "grade": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "institutionName": {
            "type": "string",
            "example": "realtekh"
          },
          "qualification": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "specialization": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "startDate": {
            "type": "string",
            "example": "02-03-1999"
          },
          "university": {
            "type": "string",
            "example": "anna university"
          }
        }
      },
      "FilterApplicant": {
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "applicant": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicant"
            }
          }
        }
      },
      "applicant": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "63f8adbf48648c7cdb2c42c7"
          },
          "cityName": {
            "type": "string",
            "example": "El Tarter"
          },
          "countryName": {
            "type": "string",
            "example": "Albania"
          },
          "createdBy": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "designation": {
            "type": "string",
            "example": " "
          },
          "firstName": {
            "type": "string",
            "example": "Mohammad M"
          },
          "lastName": {
            "type": "string",
            "example": "Islam"
          },
          "photo": {
            "properties": {
              "uploadedFileName": {
                "type": "string",
                "example": "photothurscpu"
              },
              "uniqueName": {
                "type": "string",
                "example": "uniquephotothurscpu"
              },
              "location": {
                "type": "string",
                "example": "path of the file"
              }
            }
          },
          "ratings": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "mobile testing",
              "java",
              "golang"
            ]
          },
          "stateName": {
            "type": "string",
            "example": "Somali Region"
          },
          "submissionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/submissionDetail"
            }
          },
          "submittedStatus": {
            "type": "string",
            "example": "recently submitted"
          },
          "submittedTime": {
            "type": "string",
            "example": "2 hours ago"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int32"
            },
            "example": [
              "tags1",
              "tags2",
              "tags3"
            ]
          },
          "updatedAt": {
            "type": "string",
            "example": "Mar 9, 2023"
          },
          "workExperience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperience"
            }
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 7
          }
        }
      },
      "submissionDetail": {
        "properties": {
          "submissionAt": {
            "type": "string",
            "example": "2023-03-08T00:00:00.000Z"
          }
        }
      },
      "address": {
        "properties": {
          "city": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "country": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "line1": {
            "type": "string",
            "example": "mylinethurscpu"
          },
          "line2": {
            "type": "string",
            "example": "linethurscpu"
          },
          "state": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "pincode": {
            "type": "string",
            "example": 629204
          }
        }
      },
      "ApplicantsResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "63f8adbf48648c7cdb2c42c7"
          },
          "alternateVisa": {
            "$ref": "#/components/schemas/AlternateVisa"
          },
          "cityName": {
            "type": "string",
            "example": "El Tarter"
          },
          "contactNumber": {
            "type": "string",
            "example": 23423423
          },
          "countryCode": {
            "type": "string",
            "example": 355
          },
          "countryName": {
            "type": "string",
            "example": "Albania"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "03-06-2000"
          },
          "designation": {
            "type": "string",
            "example": "java developer"
          },
          "disabilityStatus": {
            "type": "string",
            "example": "no"
          },
          "domain": {
            "type": "string",
            "example": [
              "domainthurscpu"
            ]
          },
          "educationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationDetail"
            }
          },
          "email": {
            "type": "string",
            "example": "naveentoday123@gmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "naveen"
          },
          "lastName": {
            "type": "string",
            "example": "mk123"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "lastUpdated": {
            "type": "string",
            "example": "Mar 13, 2023"
          },
          "line1": {
            "type": "string",
            "example": "mylinethurscpu"
          },
          "line2": {
            "type": "string",
            "example": "mylinethurscpu"
          },
          "passport": {
            "$ref": "#/components/schemas/Candidatepassport"
          },
          "photo": {
            "properties": {
              "uploadedFileName": {
                "type": "string",
                "example": "photothurscpu"
              },
              "uniqueName": {
                "type": "string",
                "example": "uniquephotothurscpu"
              },
              "location": {
                "type": "string",
                "example": "path of the file"
              }
            }
          },
          "pincode": {
            "type": "string",
            "example": 629204
          },
          "race": {
            "type": "string",
            "example": "White"
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ratings"
            }
          },
          "relocation": {
            "type": "boolean",
            "example": false
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "mobile testing",
              "java",
              "golang"
            ]
          },
          "socialProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialProfiles"
            }
          },
          "sourceName": {
            "type": "string",
            "example": "Others"
          },
          "stateName": {
            "type": "string",
            "example": "Somali Region"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "vendorComments": {
            "type": "string",
            "example": "test vendor comments"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "vendorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendorDetails"
            }
          },
          "veteranStatus": {
            "type": "string",
            "example": "veteranStatusthurscpu"
          },
          "visa": {
            "$ref": "#/components/schemas/Candidatevisa"
          },
          "workExperience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workexperience"
            }
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 3
          }
        }
      },
      "CandidateCountry": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Afghanistan"
          }
        }
      },
      "CandidatesCountryid": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          }
        }
      },
      "CandidateCountryState": {
        "properties": {
          "name": {
            "type": "string",
            "example": "Berat County"
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "example": 603
          }
        }
      },
      "CandidateCountrystateid": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "example": 629
          }
        }
      },
      "CandidateCountryStateCity": {
        "properties": {
          "cityId": {
            "type": "integer",
            "format": "int32",
            "example": 153
          },
          "name": {
            "type": "string",
            "example": "Banaj"
          }
        }
      },
      "CandidateSpecialization": {
        "properties": {
          "specializationId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "MAINTENANCE ENGINEERING"
          }
        }
      },
      "CandidateQualification": {
        "properties": {
          "qualificationId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "BACHELOR OF PHARMACY"
          }
        }
      },
      "CandidateCountrycode": {
        "properties": {
          "countryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "phoneCode": {
            "type": "string",
            "example": 93
          }
        }
      },
      "CandidateEmail": {
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/To-mail"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cc-mail"
            }
          },
          "subject": {
            "type": "string",
            "example": "Hello, World!"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/content-mail"
            }
          },
          "from": {
            "properties": {
              "email": {
                "type": "string",
                "example": "fgh.xyz@gmail.com"
              },
              "name": {
                "type": "string",
                "example": "Smith"
              }
            }
          },
          "replyTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/replyTo-mail"
            }
          }
        }
      },
      "To-mail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "abc.xyz@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "abc"
          }
        }
      },
      "cc-mail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "efg.xyz@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "efg"
          }
        }
      },
      "content-mail": {
        "properties": {
          "type": {
            "type": "string",
            "example": "text/html"
          },
          "value": {
            "type": "string",
            "example": "<p>Hello from Twilio SendGrid!</p><p>Sending with the email service trusted by developers and marketers for <strong>time-savings</strong>, <strong>scalability</strong>, and <strong>delivery expertise</strong>.</p><p>%open-track%</p>"
          }
        }
      },
      "replyTo-mail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "ijk.xyz@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "Sam"
          }
        }
      },
      "vendorcontacts": {
        "properties": {
          "firstName": {
            "type": "string",
            "example": "vinoth"
          },
          "lastName": {
            "type": "string",
            "example": "mk"
          },
          "contactCountryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "contactNumber": {
            "type": "string",
            "example": 686786767
          },
          "email": {
            "type": "string",
            "example": "vinoth123@gmail.com"
          },
          "vendorContactIsDeleted": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "EducationDetail": {
        "properties": {
          "companyName": {
            "type": "string",
            "example": "BACHELOR OF SCIENCE"
          },
          "currentEmployerStatus": {
            "type": "string",
            "example": "MANAGEMENT & SYSTEMS"
          },
          "endDate": {
            "type": "string",
            "example": "02-03-2009"
          },
          "startDate": {
            "type": "string",
            "example": "02-03-2004"
          },
          "university": {
            "type": "string",
            "example": "anna university"
          },
          "educationType": {
            "type": "string",
            "example": "distance education"
          }
        }
      },
      "vendorDetails": {
        "properties": {
          "vendorContactNumber": {
            "type": "string",
            "example": 686786767
          },
          "vendorContactcountryCode": {
            "type": "string",
            "example": 355
          },
          "vendorEmail": {
            "type": "string",
            "example": "naveentoday@gmail.com"
          },
          "vendorfirstName": {
            "type": "string",
            "example": "vinoth"
          },
          "vendorlastName": {
            "type": "string",
            "example": "mk"
          }
        }
      },
      "Workexperience": {
        "properties": {
          "companyName": {
            "type": "string",
            "example": "realtekhthurscpu"
          },
          "jobTitle": {
            "type": "string",
            "example": "golang developerthurscpu"
          },
          "startDate": {
            "type": "string",
            "example": "02-03-1999"
          },
          "endDate": {
            "type": "string",
            "example": "02-03-2009"
          },
          "currentEmployerStatus": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CandidateEdit": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "640edfb35e20b24de06bd903"
          },
          "alternateVisa": {
            "$ref": "#/components/schemas/AlternateVisa"
          },
          "basicDetails": {
            "properties": {
              "city": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "country": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "contactNumber": {
                "type": "string",
                "example": 23423423
              },
              "countryCode": {
                "type": "string",
                "example": 355
              },
              "dateOfBirth": {
                "type": "string",
                "example": "02-03-1999"
              },
              "email": {
                "type": "string",
                "example": "test@gmail.com"
              },
              "firstName": {
                "type": "string",
                "example": "naveentoday123thurscpu"
              },
              "lastName": {
                "type": "string",
                "example": "mk123thurscpu"
              },
              "line1": {
                "type": "string",
                "example": "mylinethurscpu"
              },
              "line2": {
                "type": "string",
                "example": "mylinethurscpu"
              },
              "pincode": {
                "type": "string",
                "example": 629204
              },
              "ratings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ratings"
                }
              },
              "relocation": {
                "type": "boolean",
                "example": false
              },
              "resume": {
                "properties": {
                  "location": {
                    "type": "string",
                    "example": "path of the file"
                  },
                  "uniqueName": {
                    "type": "string",
                    "example": "uniqueNamethurscpu"
                  },
                  "uploadedFileName": {
                    "type": "string",
                    "example": "resumethurscpu"
                  }
                }
              },
              "state": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "visaExpiryDate": {
                "type": "string",
                "example": "02-03-2022"
              }
            }
          },
          "designation": {
            "type": "string",
            "example": "java developer"
          },
          "domain": {
            "type": "string",
            "example": [
              "domainthurscpu"
            ]
          },
          "educationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationDetails"
            }
          },
          "eeoDetails": {
            "$ref": "#/components/schemas/EEODetails"
          },
          "passport": {
            "$ref": "#/components/schemas/Candidatepassport"
          },
          "skillsAndExperience": {
            "properties": {
              "certification": {
                "type": "string",
                "example": null
              },
              "skills": {
                "type": "string",
                "example": [
                  "java",
                  "golang"
                ]
              },
              "tags": {
                "type": "string",
                "format": "int32",
                "example": [
                  "aaathurscpu",
                  "bbbbthurscpu",
                  "ccccthurscpu"
                ]
              },
              "workExperience": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkExperience"
                }
              }
            }
          },
          "socialProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialProfiles"
            }
          },
          "visa": {
            "$ref": "#/components/schemas/Candidatevisa"
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 4
          }
        }
      },
      "EEODetails": {
        "properties": {
          "disabilityStatus": {
            "type": "string",
            "example": "no"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "race": {
            "properties": {
              "value": {
                "type": "string",
                "example": "racevaluethurscpu"
              }
            }
          },
          "veteranStatus": {
            "type": "string",
            "example": "veteranStatusthurscpu"
          }
        }
      },
      "CandidatesearchReq": {
        "properties": {
          "searchValue": {
            "type": "string",
            "example": "Medical Biochemistry"
          }
        }
      },
      "CandidateSearch": {
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "applicant": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicant"
            }
          }
        }
      },
      "Candidateworkauth": {
        "properties": {
          "name": {
            "type": "string",
            "example": "Green Card"
          },
          "workAuthorizationId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          }
        }
      },
      "Candidatesource": {
        "properties": {
          "name": {
            "type": "string",
            "example": "Email"
          },
          "sourceId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "Candidatevisatype": {
        "properties": {
          "visatypeId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "visatypeName": {
            "type": "string",
            "example": "Green Card"
          }
        }
      },
      "Candidaterace": {
        "properties": {
          "raceId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "raceName": {
            "type": "string",
            "example": "White"
          }
        }
      },
      "Candidatevendorcompany": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "63fe05e242d8f381ee5f47bc"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "realtek123"
          }
        }
      },
      "Candidatevendorcontact": {
        "properties": {
          "vendorContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendorContact"
            }
          }
        }
      },
      "vendorContact": {
        "properties": {
          "contactCountryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "contactNumber": {
            "type": "string",
            "example": 67854232343
          },
          "email": {
            "type": "string",
            "example": "realtekemailfryday@gmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "hotlistrealtekfryday"
          },
          "lastName": {
            "type": "string",
            "example": "realtekfirstnamefryday"
          },
          "vendorContactId": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "vendorContactIsDeleted": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Candidateratings": {
        "properties": {
          "ratingsId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "ratingsName": {
            "type": "string",
            "example": "Communications"
          },
          "ratingsVale": {
            "type": "integer",
            "format": "int32",
            "example": 25
          }
        }
      },
      "VendorCreateRequest": {
        "required": [
          "businessId",
          "businessUnitId",
          "createdBy",
          "schemaVersion",
          "tenantId",
          "vendorCompanyName"
        ],
        "properties": {
          "businessId": {
            "type": "string",
            "example": "82c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "createdBy": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "tenantId": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "Amazon"
          },
          "vendorComments": {
            "type": "string",
            "example": "A comment about the vendor"
          },
          "vendorContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorContactRequest"
            }
          },
          "vendorDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorDocument"
            }
          },
          "vendorTechnologies": {
            "type": "string",
            "example": [
              "java",
              "python"
            ]
          }
        }
      },
      "VendorContactRequest": {
        "required": [
          "email"
        ],
        "properties": {
          "contactCountrycodeId": {
            "type": "string",
            "example": 91
          },
          "contactNumber": {
            "type": "string",
            "example": 984787587
          },
          "email": {
            "type": "string",
            "example": "fgjh@hotmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "first"
          },
          "lastName": {
            "type": "string",
            "example": "last"
          }
        }
      },
      "VendorContactResponse": {
        "required": [
          "email"
        ],
        "properties": {
          "contactCountrycodeId": {
            "type": "string",
            "example": 91
          },
          "contactNumber": {
            "type": "string",
            "example": 9847875875
          },
          "email": {
            "type": "string",
            "example": "fgjh@hotmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "first"
          },
          "lastName": {
            "type": "string",
            "example": "last"
          },
          "vendorContactIsDeleted": {
            "type": "boolean",
            "example": false
          },
          "vendorContactId": {
            "type": "integer",
            "format": "int32",
            "example": 0
          }
        }
      },
      "VendorHomeViewResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "63d7c120e90445fb937fb7bf"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-30T13:07:44.962Z"
          },
          "createdBy": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "Deloitee"
          },
          "vendorContact": {
            "$ref": "#/components/schemas/VendorContactResponse"
          },
          "vendorTechnologies": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "pyhton,java"
            }
          }
        }
      },
      "VendorQuickViewResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "63d7c120e90445fb937fb7bf"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-30T13:07:44.962Z"
          },
          "createdBy": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "updatedBy": {
            "type": "string",
            "example": "13c782a4aa626175e5d11afa"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "HCL"
          },
          "vendorComments": {
            "type": "string",
            "example": "A comment about the vendor"
          },
          "vendorContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorContactResponse"
            }
          },
          "vendorDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorDocument"
            }
          },
          "vendorTechnologies": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "pyhton,java"
            }
          }
        }
      },
      "VendorUpdate": {
        "required": [
          "schemaVersion",
          "vendorCompanyName",
          "updatedBy"
        ],
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "Deloitee"
          },
          "vendorTechnologies": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "pyhton,java"
            }
          },
          "updatedBy": {
            "type": "string",
            "example": "82c782a4aa626175e5d11afb"
          },
          "vendorContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorContactRequest"
            }
          }
        }
      },
      "VendorSort": {
        "properties": {
          "sortVariable": {
            "type": "string",
            "example": "vendorContact.firstName"
          },
          "sortMethodId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "VendorFilterRequest": {
        "type": "object",
        "properties": {
          "availableDetails": {
            "type": "object",
            "properties": {
              "vendorCompany": {
                "type": "boolean"
              },
              "technologies": {
                "type": "boolean"
              },
              "contactPerson": {
                "type": "boolean"
              },
              "contactNumber": {
                "type": "boolean"
              },
              "email": {
                "type": "boolean"
              }
            }
          },
          "vendorTechnologies": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "pyhton,java"
            }
          },
          "sortOptions": {
            "properties": {
              "sortVariable": {
                "type": "string",
                "example": "vendorContact.firstName"
              },
              "sortMethodId": {
                "type": "integer",
                "format": "int32",
                "example": -1
              }
            }
          }
        }
      },
      "VendorDocument": {
        "type": "object",
        "properties": {
          "vendorUploadName": {
            "type": "string",
            "example": "asfg.jpg"
          },
          "vendorDocumentsUniqueName": {
            "type": "string",
            "example": "Doc01"
          },
          "VendorDocumentsLocation": {
            "type": "string",
            "example": "https://www.asaf.com"
          }
        }
      },
      "document": {
        "type": "string",
        "format": "byte",
        "example": "SGVsbG8gV29ybGQhCg=="
      },
      "vendorCountry": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Afghanistan"
          }
        }
      },
      "vendorCountryStateReq": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          }
        }
      },
      "vendorCountryState": {
        "properties": {
          "stateId": {
            "type": "integer",
            "format": "int32",
            "example": 1118
          },
          "name": {
            "type": "string",
            "example": "Adrar"
          }
        }
      },
      "vendorCountrycode": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "phoneCode": {
            "type": "integer",
            "format": "int32",
            "example": 93
          }
        }
      },
      "vendorCountryStateCityReq": {
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "example": 1108
          }
        }
      },
      "vendorCountryStatecity": {
        "properties": {
          "cityId": {
            "type": "integer",
            "format": "int32",
            "example": 31298
          },
          "name": {
            "type": "string",
            "example": "Béchar"
          }
        }
      },
      "VendorEditView": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "63d7c120e90445fb937fb7bf"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-30T13:07:44.962Z"
          },
          "createdBy": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "updatedBy": {
            "type": "string",
            "example": "13c782a4aa626175e5d11afa"
          },
          "updatedAT": {
            "type": "string",
            "example": "March 16, 2023"
          },
          "vendorComments": {
            "type": "string",
            "example": "A comment about the vendor"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "Amazon"
          },
          "vendorContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorContacts"
            }
          },
          "vendorTechnologies": {
            "type": "string",
            "example": [
              "pyhton",
              "java",
              "python3"
            ]
          }
        }
      },
      "VendorContacts": {
        "properties": {
          "contactCountrycodeId": {
            "type": "string",
            "example": 91
          },
          "contactNumber": {
            "type": "string",
            "example": 984787587
          },
          "email": {
            "type": "string",
            "example": "fgjh@hotmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "first"
          },
          "lastName": {
            "type": "string",
            "example": "last"
          }
        }
      },
      "VendorEmailData": {
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tomail"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ccmail"
            }
          },
          "subject": {
            "type": "string",
            "example": "Hello, World123!"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contentmail"
            }
          },
          "from": {
            "properties": {
              "email": {
                "type": "string",
                "example": "prakash.realtekh@gmail.com"
              },
              "name": {
                "type": "string",
                "example": "Sam Smith"
              }
            }
          },
          "replyTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/replyTomail"
            }
          }
        }
      },
      "tomail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "naveenm.realtekh@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "ccmail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "naveenzbp1999@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "contentmail": {
        "properties": {
          "type": {
            "type": "string",
            "example": "text/html"
          },
          "value": {
            "type": "string",
            "example": "<p>Hello from Twilio SendGrid!</p><p>Sending with the email service trusted by developers and marketers for <strong>time-savings</strong>, <strong>scalability</strong>, and <strong>delivery expertise</strong>.</p><p>%open-track%</p>"
          }
        }
      },
      "replyTomail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "prakash.realtekh@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "Sam Smith"
          }
        }
      },
      "VendorSearchReq": {
        "properties": {
          "searchValue": {
            "type": "string",
            "example": "java"
          }
        }
      },
      "VendorSearch": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "640eed7c1c2e4a1be1eca95f"
          },
          "createdAt": {
            "type": "string",
            "example": "March 13, 2023"
          },
          "createdBy": {
            "type": "string",
            "example": "71c782a4aa626175e5d11afa"
          },
          "vendorCompanyName": {
            "type": "string",
            "example": "test444"
          },
          "vendorContacts": {
            "properties": {
              "contactCountryCodeId": {
                "type": "string",
                "example": 355
              },
              "contactNumber": {
                "type": "string",
                "example": 984787587
              },
              "email": {
                "type": "string",
                "example": "fgjh@hotmail.com"
              },
              "firstName": {
                "type": "string",
                "example": "first"
              },
              "lastName": {
                "type": "string",
                "example": "last"
              },
              "vendorContactId": {
                "type": "string",
                "example": 0
              },
              "vendorContactIsDeleted": {
                "type": "boolean",
                "example": false
              }
            }
          },
          "vendorTechnologies": {
            "type": "string",
            "example": [
              "pyhton",
              "java"
            ]
          }
        }
      },
      "HotlistCreateRequest": {
        "required": [
          "hotlistFirstName",
          "hotlistLastName",
          "hotlistExperienceYears"
        ],
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "82c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "hotlistFirstName": {
            "type": "string",
            "example": "hotlistFirstNamefry"
          },
          "hotlistLastName": {
            "type": "string",
            "example": "hotlistLastNamefry"
          },
          "hotlistLocation": {
            "type": "string",
            "example": "noida"
          },
          "hotlistSkills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "java",
              "golang"
            ]
          },
          "hotlistVisaType": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "hotlistExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "addedAsCandidate": {
            "type": "boolean",
            "example": true
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "hotlistContactFirstName": {
            "type": "string",
            "example": "kasi"
          },
          "hotlistContactLastName": {
            "type": "string",
            "example": "ram"
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "abc@test.com"
          },
          "hotlistContactCountryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "hotlistContactNumber": {
            "type": "string",
            "example": 3435435435
          },
          "createdBy": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afe"
          }
        }
      },
      "HotlistGroup": {
        "required": [
          "hotlistFirstName",
          "hotlistLastName",
          "hotlistExperienceYears"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "63f8b84789b66da13bc60658"
          },
          "formatedUpdatedAt": {
            "type": "string",
            "example": "Jan 12, 1"
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "naveen@yahoo.com"
          },
          "hotlistContactFirstName": {
            "type": "string",
            "example": "mk"
          },
          "hotlistContactLastName": {
            "type": "string",
            "example": "lastName"
          },
          "hotlistContactNumber": {
            "type": "string",
            "example": 8765290835
          },
          "hotlistFirstName": {
            "type": "string",
            "example": "ram"
          },
          "hotlistLastName": {
            "type": "string",
            "example": "sai"
          },
          "hotlistExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "hotlistSkills": {
            "type": "array",
            "example": [
              "java12",
              "golang12"
            ]
          },
          "hotlistVisaType": {
            "type": "string",
            "example": "GC AED"
          },
          "updatedAt": {
            "type": "string",
            "example": "Mar 7, 2023"
          }
        }
      },
      "HotlistUpdateRequest": {
        "required": [
          "hotlistFirstName",
          "hotlistLastName",
          "hotlistExperienceYears"
        ],
        "properties": {
          "hotlistVisaType": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "hotlistExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "hotlistFirstName": {
            "type": "string",
            "example": "naveen"
          },
          "hotlistLastName": {
            "type": "string",
            "example": "mk"
          },
          "hotlistLocation": {
            "type": "string",
            "example": "chennai"
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "hotlistContactFirstName": {
            "type": "string",
            "example": "naveenn"
          },
          "hotlistContactLastName": {
            "type": "string",
            "example": "mkk"
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "abc@test1234556.com"
          },
          "hotlistSkills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "java",
              "golang"
            ]
          },
          "hotlistContactCountryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "hotlistContactNumber": {
            "type": "string",
            "example": 789456123
          },
          "updatedBy": {
            "type": "string",
            "example": "63f87ffe430019a3d11d5fdc"
          }
        }
      },
      "HotlistFilterRequest": {
        "properties": {
          "hotlistVisaType": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "example": 3
            }
          },
          "hotlistSkills": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "java"
            }
          },
          "hotlistLocation": {
            "type": "string",
            "example": "pune"
          },
          "experienceFrom": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "experienceTo": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "oneWeekAgo": {
            "type": "boolean",
            "example": true
          },
          "twoWeekAgo": {
            "type": "boolean",
            "example": false
          },
          "sixMonthsAgo": {
            "type": "boolean",
            "example": false
          },
          "createdAtStartDate": {
            "type": "string",
            "example": "<startdate>"
          },
          "createdAtEndDate": {
            "type": "string",
            "example": "<enddate>"
          }
        }
      },
      "NotifyData": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "82c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "type": {
            "type": "string",
            "example": "hotlist"
          },
          "creatorComments": {
            "type": "string",
            "example": "test comments"
          },
          "receiver": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "91c782a4aa626175e5d11aaa"
            }
          },
          "createdAt": {
            "type": "string",
            "example": "<created time>"
          },
          "createdBy": {
            "type": "string",
            "example": "<user name>"
          },
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 4
          }
        }
      },
      "HotlistFilter": {
        "required": [
          "hotlistFirstName",
          "hotlistLastName",
          "hotlistExperienceYears"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "63f8b84789b66da13bc60658"
          },
          "formatedUpdatedAt": {
            "type": "string",
            "example": "Jan 12, 1"
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "naveen@yahoo.com"
          },
          "hotlistContactFirstName": {
            "type": "string",
            "example": "mk"
          },
          "hotlistContactLastName": {
            "type": "string",
            "example": "lastName"
          },
          "hotlistContactNumber": {
            "type": "string",
            "example": 8765290835
          },
          "hotlistFirstName": {
            "type": "string",
            "example": "ram"
          },
          "hotlistLastName": {
            "type": "string",
            "example": "sai"
          },
          "hotlistExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "hotlistSkills": {
            "type": "array",
            "example": [
              "java12",
              "golang12"
            ]
          },
          "hotlistVisaType": {
            "type": "string",
            "example": "GC AED"
          },
          "updatedAt": {
            "type": "string",
            "example": "Mar 7, 2023"
          }
        }
      },
      "SortRequest": {
        "properties": {
          "oldest": {
            "type": "boolean",
            "example": true
          },
          "newest": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "HotlistVisaType": {
        "properties": {
          "visatypeId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "visatypeName": {
            "type": "string",
            "example": "US Citizen"
          }
        }
      },
      "HotlistCountryCode": {
        "properties": {
          "countryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "phoneCode": {
            "type": "string",
            "example": 93
          }
        }
      },
      "HotlistEdit": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "6406f3241317140b86d7b67b"
          },
          "hotlistContactConuntryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "abc@test1234556.com"
          },
          "hotlistContactFirstName": {
            "type": "string",
            "example": "kasi123"
          },
          "hotlistContactLastName": {
            "type": "string",
            "example": "ram"
          },
          "hotlistContactNumber": {
            "type": "string",
            "example": 789456123
          },
          "hotlistExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "hotlistFirstName": {
            "type": "string",
            "example": "hotlistFirstNamefry"
          },
          "hotlistLastName": {
            "type": "string",
            "example": "hotlistLastNamefry"
          },
          "hotlistLocation": {
            "type": "string",
            "example": 2
          },
          "hotlistSkills": {
            "type": "string",
            "example": [
              "java",
              "golang"
            ]
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "HCL"
          },
          "hotlistVisaType": {
            "type": "integer",
            "format": "int32",
            "example": 2
          }
        }
      },
      "HotlistEmail": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "6406f3241317140b86d7b67a"
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "abc@test1234556.com"
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "HCL"
          }
        }
      },
      "HotlistEmailData": {
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tomail"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cc_mail"
            }
          },
          "subject": {
            "type": "string",
            "example": "Hello, World123!"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/content_mail"
            }
          },
          "from": {
            "properties": {
              "email": {
                "type": "string",
                "example": "prakash.realtekh@gmail.com"
              },
              "name": {
                "type": "string",
                "example": "Sam Smith"
              }
            }
          },
          "replyTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/replyTo_mail"
            }
          }
        }
      },
      "Tomail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "naveenm.realtekh@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "cc_mail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "naveenzbp1999@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "content_mail": {
        "properties": {
          "type": {
            "type": "string",
            "example": "text/html"
          },
          "value": {
            "type": "string",
            "example": "<p>Hello from Twilio SendGrid!</p><p>Sending with the email service trusted by developers and marketers for <strong>time-savings</strong>, <strong>scalability</strong>, and <strong>delivery expertise</strong>.</p><p>%open-track%</p>"
          }
        }
      },
      "replyTo_mail": {
        "properties": {
          "email": {
            "type": "string",
            "example": "prakash.realtekh@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "Sam Smith"
          }
        }
      },
      "HotlistSearchReq": {
        "properties": {
          "searchValue": {
            "type": "string",
            "example": "hotlistFirstNamefry"
          }
        }
      },
      "HotlistSearch": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "640ee1adb033972d03a56c26"
          },
          "countryCodeValue": {
            "type": "string",
            "example": 355
          },
          "hotlistContactEmail": {
            "type": "string",
            "example": "abc@test.com"
          },
          "hotlistContactFirstName": {
            "type": "string",
            "example": "abc"
          },
          "hotlistContactLastName": {
            "type": "string",
            "example": "ram"
          },
          "hotlistContactNumber": {
            "type": "string",
            "example": 3435435435
          },
          "hotlistExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "hotlistFirstName": {
            "type": "string",
            "example": "hotlistFirstNamefry"
          },
          "hotlistLastName": {
            "type": "string",
            "example": "hotlistLastNamefry"
          },
          "hotlistLocation": {
            "type": "string",
            "example": 2
          },
          "hotlistSkills": {
            "type": "string",
            "example": [
              "java",
              "golang"
            ]
          },
          "hotlistVendorCompanyName": {
            "type": "string",
            "example": "TCS"
          },
          "hotlistVisaType": {
            "type": "string",
            "example": "Green Card"
          },
          "updatedAt": {
            "type": "string",
            "example": "Mar 13, 2023"
          }
        }
      },
      "HotlistLocation": {
        "properties": {
          "hotlistLocation": {
            "type": "string",
            "example": [
              "Madurai",
              "chennai"
            ]
          }
        }
      },
      "HotlistSkills": {
        "properties": {
          "hotlistSkills": {
            "type": "string",
            "example": [
              "Dev",
              "python",
              "gghgh"
            ]
          }
        }
      },
      "JobReq": {
        "required": [
          "jobTitle",
          "jobSource",
          "experience",
          "jobDescription",
          "jobPrimarySkills",
          "jobLocation",
          "jobRemoteStatus",
          "clientname",
          "employmentType",
          "taxTerms",
          "numberOfPosition",
          "priority",
          "jobTags",
          "jobOwnerId",
          "targetSubmission",
          "targerDate"
        ],
        "type": "object",
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "clientId": {
            "type": "string",
            "example": "83c782a4aa626175e5d10a8a"
          },
          "clientJobReferenceId": {
            "type": "string",
            "example": "sagjusd059f"
          },
          "clientContactPersonId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "jobDescription": {
            "type": "string",
            "example": "must have the knowledge in javascript in atleast 4yrs"
          },
          "jobTitle": {
            "type": "string",
            "example": "developer"
          },
          "jobSource": {
            "type": "string",
            "example": "linkedin"
          },
          "experience": {
            "type": "object",
            "properties": {
              "experienceRequiredFrom": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "experienceRequiredTo": {
                "type": "integer",
                "format": "int32",
                "example": 7
              },
              "experienceRequiredUnit": {
                "type": "string",
                "example": "years"
              }
            }
          },
          "jobLocation": {
            "type": "string",
            "example": "chennai"
          },
          "jobRemoteStatus": {
            "type": "string",
            "example": "WFH"
          },
          "jobPrimarySkills": {
            "type": "object",
            "example": [
              "java"
            ]
          },
          "jobSecondaySkills": {
            "type": "object",
            "example": [
              "python"
            ]
          },
          "jobTags": {
            "type": "object",
            "example": [
              "golang"
            ]
          },
          "employmentType": {
            "type": "string",
            "example": "full-time"
          },
          "contractDuration": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "unit": {
                "type": "string",
                "example": "4 months"
              }
            }
          },
          "taxTerms": {
            "type": "string",
            "example": "test tax"
          },
          "numberOfPosition": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "targetSubmission": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "targetDate": {
            "type": "string",
            "example": "03-09-2023"
          },
          "priority": {
            "type": "string",
            "enum": [
              "incremental",
              "medium",
              "low"
            ]
          },
          "priorityFrom": {
            "type": "string",
            "example": "DD/MM/YYYY"
          },
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "recruiters": {
            "type": "integer",
            "example": [
              5,
              6
            ]
          },
          "closerRating": {
            "type": "string",
            "example": 4
          },
          "jobStatus": {
            "type": "string",
            "example": "open"
          },
          "jobActivity": {
            "type": "string",
            "example": []
          },
          "jobAttachments": {
            "type": "string",
            "example": []
          },
          "jobRecruitmentStatus": {
            "type": "string",
            "example": "jobRecruitmentStatus"
          },
          "jobPayDetails": {
            "properties": {
              "clientBillRateStart": {
                "type": "integer",
                "format": "int32",
                "example": 1200
              },
              "clientBillRateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 2300
              },
              "clientBillRateCurrency": {
                "type": "string",
                "example": "dollar"
              },
              "clientBillRateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "clientBillRateUnit": {
                "type": "string",
                "example": "year"
              },
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 4500
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 6700
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": "dollar"
              },
              "instructPayrateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": "year"
              }
            }
          }
        }
      },
      "recruiters": {
        "properties": {
          "recruiterId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "recruiterName": {
            "type": "string",
            "example": "nepro"
          },
          "recruiterEmail": {
            "type": "string",
            "example": "nepro@gmail.com"
          },
          "assignedDateTime": {
            "type": "string",
            "example": "2023-03-29T05:50:44.451Z"
          }
        }
      },
      "JobRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Added Successfully"
          }
        }
      },
      "JobClientReq": {
        "required": [
          "clientName"
        ],
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "clientName": {
            "type": "string",
            "example": "TCS"
          },
          "clientContact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/clientcontact"
            }
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "example": 2
          }
        }
      },
      "clientcontact": {
        "properties": {
          "firstName": {
            "type": "string",
            "example": "sarath"
          },
          "lastName": {
            "type": "string",
            "example": "nicky"
          },
          "countryCode": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "contactNumber": {
            "type": "string",
            "example": 874543546
          },
          "email": {
            "type": "string",
            "example": "sarathnicky@gmail.com"
          },
          "contactType": {
            "type": "string",
            "example": "manager"
          }
        }
      },
      "JobClientRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Client Added Successfully"
          }
        }
      },
      "ClientReq": {
        "properties": {
          "firstName": {
            "type": "string",
            "example": "sarath"
          },
          "lastName": {
            "type": "string",
            "example": "nicky"
          },
          "countryCode": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "contactNumber": {
            "type": "string",
            "example": 874543546
          },
          "email": {
            "type": "string",
            "example": "sarathnicky@gmail.com"
          },
          "contactType": {
            "type": "string",
            "example": "manager"
          }
        }
      },
      "ClientRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Contact Client added Successfully"
          }
        }
      },
      "clientJobRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Client Job Reference Id is an Unique"
          }
        }
      },
      "clientNameRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Client Name is a Unique"
          }
        }
      },
      "Job": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobData"
            }
          }
        }
      },
      "JobData": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "642d15d28f8cb4ac761078d2"
          },
          "clientContactPersonId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "clientId": {
            "type": "string",
            "example": "83c782a4aa626175e5d10a8a"
          },
          "clientJobRefrenceId": {
            "type": "string",
            "example": "sagjusd059f"
          },
          "closerRating": {
            "type": "string",
            "example": 2
          },
          "contractDuration": {
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "unit": {
                "type": "string",
                "example": "months"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "example": "1 hours ago"
          },
          "employmentType": {
            "type": "string",
            "example": "part time"
          },
          "experience": {
            "properties": {
              "experienceRequiredFrom": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "experienceRequiredTo": {
                "type": "integer",
                "format": "int32",
                "example": 4
              }
            }
          },
          "jobCreatedDateTime": {
            "type": "string",
            "example": "1901-01-01T00:00:00.000Z"
          },
          "jobOwnerId": {
            "type": "array",
            "items": {
              "example": "63b57588fd768a839dbc0f87"
            }
          },
          "jobPayDetails": {
            "properties": {
              "clientBillRateStart": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "clientBillRateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "clientBillRateCurrencyId": {
                "type": "string",
                "example": " "
              },
              "clientBillRateUnit": {
                "type": "string",
                "example": " "
              },
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 0
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": " "
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": " "
              }
            }
          },
          "jobPostedDate": {
            "type": "string",
            "example": " "
          },
          "jobPrimarySkills": {
            "type": "object",
            "example": [
              "java"
            ]
          },
          "jobRecruitmentStatus": {
            "type": "string",
            "example": "unread"
          },
          "jobRefrenceId": {
            "type": "string",
            "example": "fgkrtfd5fg"
          },
          "jobRemoteStatus": {
            "type": "string",
            "example": "WFO"
          },
          "jobSecondarySkills": {
            "type": "object",
            "example": [
              "java"
            ]
          },
          "jobSource": {
            "type": "string",
            "example": "linkedin"
          },
          "jobStatus": {
            "type": "string",
            "example": "active"
          },
          "jobTitle": {
            "type": "string",
            "example": "developer"
          },
          "jobAttachments": {
            "type": "string",
            "example": " "
          },
          "jobDescription": {
            "type": "string",
            "example": " "
          },
          "numberOfPosition": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "priority": {
            "type": "string",
            "enum": [
              "incremental",
              "high",
              "medium"
            ]
          },
          "priorityFrom": {
            "type": "string",
            "example": "DD/MM/YYYY"
          },
          "recruiters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recruiters"
            }
          },
          "targetDate": {
            "type": "string",
            "example": " "
          },
          "targetSubmission": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "taxTerms": {
            "type": "string",
            "example": "test tax"
          }
        }
      },
      "clientNameListRes": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "642acbc321f8ae036c00a0ed"
          },
          "clientName": {
            "type": "string",
            "example": "TCS"
          }
        }
      },
      "clientContact": {
        "properties": {
          "clientContact": {
            "items": {
              "$ref": "#/components/schemas/clientContacts"
            }
          }
        }
      },
      "clientContacts": {
        "properties": {
          "clientContactId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "contactNumber": {
            "type": "string",
            "example": 34543546
          },
          "countryCode": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "email": {
            "type": "string",
            "example": "naveen@gmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "sarath"
          },
          "lastName": {
            "type": "string",
            "example": "nicky"
          },
          "contactType": {
            "type": "string",
            "example": "manager"
          }
        }
      },
      "clientCountrycode": {
        "properties": {
          "countryCodeId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "phoneCode": {
            "type": "string",
            "example": 93
          }
        }
      },
      "clientName": {
        "properties": {
          "clientName": {
            "type": "string",
            "example": "Wipro"
          }
        }
      },
      "UserList": {
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "userName": {
            "type": "string",
            "example": "allwyn-realtek"
          },
          "userEmail": {
            "type": "string",
            "example": "allwyn@realtekhconsulting.net"
          }
        }
      },
      "jobdetail": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/JobDetail"
          }
        }
      },
      "JobDetail": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "644287496a085fa932005d13"
          },
          "clientContactPersonId": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "clientId": {
            "type": "string",
            "example": "83c782a4aa626175e5d10a8a"
          },
          "closureRating": {
            "type": "string",
            "example": "High"
          },
          "contractDuration": {
            "properties": {
              "unit": {
                "type": "string",
                "example": "8"
              },
              "value": {
                "type": "string",
                "example": "months"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "example": "4 days ago"
          },
          "customFields": {
            "type": "array",
            "example": {}
          },
          "employmentType": {
            "type": "string",
            "example": "full time"
          },
          "experience": {
            "properties": {
              "from": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "to": {
                "type": "integer",
                "format": "int32",
                "example": 5
              },
              "unit": {
                "type": "string",
                "example": "years"
              }
            }
          },
          "jobCreatedDateTime": {
            "type": "string",
            "example": "1901-01-01T00:00:00.000Z"
          },
          "jobDescription": {
            "type": "string",
            "example": "first update the job description"
          },
          "jobLocation": {
            "type": "string",
            "example": "chennai"
          },
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "jobPayDetails": {
            "properties": {
              "clientBillRateStart": {
                "type": "integer",
                "format": "int32",
                "example": 7000
              },
              "clientBillRateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 9000
              },
              "clientBillRateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "clientBillRateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "clientBillRateUnit": {
                "type": "string",
                "example": "hour"
              },
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 5000
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 70000
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "instructPayrateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": "hour"
              }
            }
          },
          "jobPostedDate": {
            "type": "string",
            "example": "MM/DD/YYYY"
          },
          "jobPrimarySkills": {
            "type": "array",
            "example": [
              "java"
            ]
          },
          "jobRecruitmentStatus": {
            "type": "string",
            "example": "unread"
          },
          "jobRemoteStatus": {
            "type": "string",
            "example": "WFH"
          },
          "jobSecondarySkills": {
            "type": "array",
            "example": [
              "js"
            ]
          },
          "jobSource": {
            "type": "string",
            "example": "linkedin"
          },
          "jobStatus": {
            "type": "string",
            "example": "active"
          },
          "jobTags": {
            "type": "array",
            "example": [
              "golang"
            ]
          },
          "jobTitle": {
            "type": "string",
            "example": "golang developer"
          },
          "jobAttachments": {
            "type": "array",
            "example": [
              null
            ]
          },
          "numberOfPosition": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "priority": {
            "type": "string",
            "example": "incremental"
          },
          "priorityFrom": {
            "type": "string",
            "example": "09/09/2023"
          },
          "recruiters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recruiters"
            }
          },
          "targetDate": {
            "type": "string",
            "example": ""
          },
          "targetSubmission": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "taxTerms": {
            "type": "string",
            "example": "test tax"
          }
        }
      },
      "EditJobReq": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "clientId": {
            "type": "string",
            "example": "83c782a4aa626175e5d10a8a"
          },
          "clientJobReferenceId": {
            "type": "string",
            "example": "sgdhfghsd059f"
          },
          "clientContactPersonId": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "jobReferenceId": {
            "type": "string",
            "example": "hgsfdhha"
          },
          "jobDescription": {
            "type": "string",
            "example": "must have the knowledge in javascript in atleast 4yrs"
          },
          "jobTitle": {
            "type": "string",
            "example": "golang developer"
          },
          "jobSource": {
            "type": "string",
            "example": "linkedin"
          },
          "experience": {
            "properties": {
              "from": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "to": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "unit": {
                "type": "string",
                "example": "year"
              }
            }
          },
          "jobLocation": {
            "type": "string",
            "example": "NOIDA"
          },
          "jobRemoteStatus": {
            "type": "string",
            "example": "WFH"
          },
          "jobPrimarySkills": {
            "type": "array",
            "example": [
              "java",
              "js",
              "node js"
            ]
          },
          "jobSecondarySkills": {
            "type": "array",
            "example": [
              "python",
              "golang",
              "mysql"
            ]
          },
          "jobTags": {
            "type": "array",
            "example": [
              "ruby",
              "php"
            ]
          },
          "employmentType": {
            "type": "string",
            "example": "part-time"
          },
          "contractDuration": {
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32",
                "example": 9
              },
              "unit": {
                "type": "string",
                "example": "months"
              }
            }
          },
          "taxTerms": {
            "type": "string",
            "example": "testterms"
          },
          "numberOfPosition": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "targetSubmission": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "targerDate": {
            "type": "string",
            "example": "03-11-2023"
          },
          "priority": {
            "type": "string",
            "example": "incremental"
          },
          "priorityFrom": {
            "type": "string",
            "example": "09/11/2023"
          },
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "recruiters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recruiters"
            }
          },
          "closerRating": {
            "type": "string",
            "example": 4
          },
          "jobStatus": {
            "type": "string",
            "example": "open"
          },
          "jobRecruitmentStatus": {
            "type": "string",
            "example": "jobRecruitmentStatus"
          },
          "jobPayDetails": {
            "properties": {
              "clientBillRateStart": {
                "type": "integer",
                "format": "int32",
                "example": 100
              },
              "clientBillRateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 8000
              },
              "clientBillRateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "clientBillRateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "clientBillRateUnit": {
                "type": "string",
                "example": "hour"
              },
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 4590
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 45980
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "instructPayrateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": "hour"
              }
            }
          },
          "jobAttachments": {
            "type": "array",
            "example": []
          },
          "jobActivity": {
            "type": "array",
            "example": []
          }
        }
      },
      "EditJobRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Updated Successfully"
          }
        }
      },
      "jobAssign": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/jobAssignview"
          }
        }
      },
      "jobAssignview": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "644910000719e750467189ec"
          },
          "closureRating": {
            "type": "string",
            "example": 2
          },
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "jobPayDetails": {
            "properties": {
              "clientBillRateStart": {
                "type": "integer",
                "format": "int32",
                "example": 100
              },
              "clientBillRateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 8000
              },
              "clientBillRateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "clientBillRateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "clientBillRateUnit": {
                "type": "string",
                "example": "hour"
              },
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 4550
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 45500
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "instructPayrateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": "hour"
              }
            }
          },
          "priority": {
            "type": "string",
            "example": "high"
          },
          "priorityFrom": {
            "type": "string",
            "example": ""
          },
          "recruiters": {
            "items": {
              "properties": {
                "assignedDateTime": {
                  "type": "string",
                  "example": "1901-01-01T00:00:00.000Z"
                },
                "recruiterEmail": {
                  "type": "string",
                  "example": "aravinth@realtekh.com"
                },
                "recruiterId": {
                  "type": "integer",
                  "format": "int32",
                  "example": 3
                },
                "recruiterName": {
                  "type": "string",
                  "example": "aravinth-realtekh"
                }
              }
            }
          }
        }
      },
      "AssignReq": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "jobId": {
            "type": "string",
            "example": "644a3e1fcabc0c960784b69f"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "closureRating": {
            "type": "string",
            "example": "asas"
          },
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 8
          },
          "jobPayDetails": {
            "properties": {
              "clientBillRateStart": {
                "type": "integer",
                "format": "int32",
                "example": 2300
              },
              "clientBillRateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 2400
              },
              "clientBillRateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "clientBillRateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "clientBillRateUnit": {
                "type": "string",
                "example": "hour"
              },
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 7800
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 8700
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": "doller"
              },
              "instructPayrateCurrencySymbol": {
                "type": "string",
                "example": "$"
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": "hour"
              }
            }
          },
          "priority": {
            "type": "string",
            "example": "High"
          },
          "priorityfrom": {
            "type": "string",
            "example": ""
          },
          "recruiters": {
            "type": "array",
            "items": {
              "properties": {
                "recruiterId": {
                  "type": "integer",
                  "format": "int32",
                  "example": 4
                }
              }
            }
          }
        }
      },
      "AssignRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Assigned Successfully"
          }
        }
      },
      "JobNotesReq": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "notesRelatedId": {
            "type": "string",
            "example": "644b740f59f48a8cb029ef1d"
          },
          "notes": {
            "type": "string",
            "example": "submit within 3 days"
          },
          "receiver": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "example": 4
          }
        }
      },
      "JobNotesRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Notes Added Successfully"
          }
        }
      },
      "jobdescriptionReq": {
        "properties": {
          "jobdescription": {
            "type": "string",
            "example": "Provide a brief, four-sentence description of the role, what success in the position looks like, and how it fits into the company or organization overall"
          }
        }
      },
      "jobdescriptionRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Details have been updated successfully"
          }
        }
      },
      "organizationaldetailsReq": {
        "properties": {
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "targetSubmission": {
            "type": "integer",
            "format": "int32",
            "example": 35
          },
          "recruiters": {
            "type": "array",
            "items": {
              "properties": {
                "recruiterId": {
                  "type": "integer",
                  "format": "int32",
                  "example": 5
                }
              }
            }
          }
        }
      },
      "organizationaldetailsReqRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Details have been updated successfully and Activity is recorded"
          }
        }
      },
      "clientDetailsReq": {
        "properties": {
          "clientContactPersonId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "numberOfPosition": {
            "type": "integer",
            "format": "int32",
            "example": 30
          },
          "employmentType": {
            "type": "string",
            "example": "full-time"
          },
          "contractDuration": {
            "properties": {
              "startDate": {
                "type": "string",
                "example": "04-28-2023"
              },
              "endDate": {
                "type": "string",
                "example": "05-27-2023"
              }
            }
          },
          "taxTerms": {
            "type": "string",
            "example": "b2b"
          }
        }
      },
      "clientDetailsRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Details have been updated successfully and Activity is recorded"
          }
        }
      },
      "otherDetailsReq": {
        "properties": {
          "experience": {
            "$ref": "#/components/schemas/experience"
          },
          "clientJobReferenceId": {
            "type": "string",
            "example": "IY821"
          },
          "jobSource": {
            "type": "string",
            "example": "Mail"
          },
          "jobLocation": {
            "type": "string",
            "example": "San Francisco,CA"
          }
        }
      },
      "experience": {
        "properties": {
          "experienceRequiredFrom": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "experienceRequiredTo": {
            "type": "integer",
            "format": "int32",
            "example": 8
          }
        }
      },
      "otherDetailsRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Details have been updated successfully and Activity is recorded"
          }
        }
      },
      "reminderRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Reminder Added Successfully"
          }
        }
      },
      "reminderReq": {
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f61"
          },
          "businessId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f62"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "creatorComments": {
            "type": "string",
            "example": "call the candidate before 12pm"
          },
          "actionDateTime": {
            "type": "string",
            "example": "2023-04-28T09:18:04.080Z"
          },
          "candidate": {
            "type": "string",
            "example": "644a24a3012e54b2715e200e"
          },
          "job": {
            "type": "string",
            "example": "644b740f59f48a8cb029ef20"
          },
          "receiver": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "example": 5
          }
        }
      },
      "jobDescription": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "properties": {
              "_id": {
                "type": "string",
                "example": "644910000719e750467189ef"
              },
              "jobDescription": {
                "type": "string",
                "example": "Provide a brief, four-sentence description of the role, what success in the position looks like, and how it fits into the company or organization overall."
              }
            }
          }
        }
      },
      "HiringCandidateReq": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "jobId": {
            "type": "string",
            "example": " "
          },
          "filter": {
            "properties": {
              "skills": {
                "type": "array",
                "example": [
                  "java"
                ]
              },
              "location": {
                "type": "array",
                "example": [
                  "chennai"
                ]
              },
              "jobTitle": {
                "type": "array",
                "example": [
                  "java developer"
                ]
              }
            }
          },
          "hiringStage": {
            "type": "string",
            "example": ""
          },
          "hiringStageType": {
            "type": "string",
            "example": ""
          },
          "sortBy": {
            "type": "string",
            "example": "id"
          },
          "sortType": {
            "type": "string",
            "example": "asc"
          },
          "booleanQuery": {
            "type": "object",
            "example": {}
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "sourceType": {
            "type": "string",
            "example": "internal"
          },
          "selectedSource": {
            "type": "array",
            "example": [
              "internal",
              "dice"
            ]
          }
        }
      },
      "HiringCandidateRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/JobHiringData"
          }
        }
      },
      "JobHiringData": {
        "properties": {
          "count": {
            "properties": {
              "total": {
                "type": "integer",
                "format": "int32",
                "example": 3
              },
              "internal": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "dice": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            }
          },
          "pagination": {
            "properties": {
              "limit": {
                "type": "integer",
                "format": "int32",
                "example": 5
              },
              "offset": {
                "type": "integer",
                "format": "int32",
                "example": 0
              }
            }
          },
          "sourceType": {
            "type": "string",
            "example": "internal"
          },
          "applicant": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobHirinapplicant"
            }
          }
        }
      },
      "JobHirinapplicant": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "6453b7534539fbc67d218dd0"
          },
          "applicantRefrenceId": {
            "type": "string",
            "example": "cand0001"
          },
          "cityName": {
            "type": "string",
            "example": "El Tarter"
          },
          "contactCountryCode": {
            "type": "string",
            "example": " "
          },
          "contactNumber": {
            "type": "string",
            "example": 3432543534
          },
          "countryName": {
            "type": "string",
            "example": "Albania"
          },
          "designation": {
            "type": "string",
            "example": "java developer"
          },
          "email": {
            "type": "string",
            "example": "naveentoday123@gmail.com"
          },
          "firstName": {
            "type": "string",
            "example": "naveen"
          },
          "fresherStatus": {
            "type": "boolean",
            "example": false
          },
          "highlightedTag": {
            "type": "string",
            "example": "New"
          },
          "lastName": {
            "type": "string",
            "example": "mk"
          },
          "preferredLocation": {
            "type": "array",
            "example": [
              "chennai"
            ]
          },
          "profileSource": {
            "type": "string",
            "example": "internal"
          },
          "skills": {
            "type": "array",
            "example": [
              "java",
              "golang"
            ]
          },
          "stateName": {
            "type": "string",
            "example": "Somali Region"
          },
          "submissionDetails": {
            "items": {
              "$ref": "#/components/schemas/SubmissionDetails"
            }
          },
          "submittedTime": {
            "type": "string",
            "example": "3 months ago"
          },
          "tags": {
            "type": "array",
            "example": [
              "aaathurscpu",
              "bbbbthurscpu",
              "ccccthurscpu"
            ]
          },
          "updatedAt": {
            "type": "string",
            "example": "May 04, 2023"
          },
          "workExperience": {
            "items": {
              "$ref": "#/components/schemas/workExperience"
            }
          },
          "yearOfExperience": {
            "type": "integer",
            "example": 7
          }
        }
      },
      "SubmissionDetails": {
        "properties": {
          "submissionAt": {
            "type": "string",
            "example": "2023-01-23T08:23:58.871Z"
          },
          "submissionId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f26"
          }
        }
      },
      "workExperience": {
        "properties": {
          "companyName": {
            "type": "string",
            "example": "realtekhthurscpu"
          },
          "currentEmployerStatus": {
            "type": "boolean",
            "example": true
          },
          "startDate": {
            "type": "string",
            "example": "03-06-2019"
          },
          "endDate": {
            "type": "string",
            "example": "02-05-2022"
          },
          "jobTitle": {
            "type": "string",
            "example": "golang developer"
          },
          "workExperienceId": {
            "type": "integer",
            "example": 3
          }
        }
      },
      "HiringReq": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "jobId": {
            "type": "string",
            "example": "644910000719e750467189ec"
          },
          "applicantId": {
            "type": "string",
            "example": "6454a7064539fbc67d218dd2"
          },
          "updateStatus": {
            "type": "string",
            "enum": [
              "goodfit",
              "responed",
              "screened",
              "submitted",
              "hired"
            ]
          },
          "updateStatusType": {
            "type": "string",
            "enum": [
              "voicemail",
              "email",
              "call",
              "qualified",
              "draft",
              "reject"
            ]
          },
          "comments": {
            "type": "string",
            "example": ""
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 12
          }
        }
      },
      "HiringRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Hiring Status Updated Successfully"
          }
        }
      },
      "submissionDetailView": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "properties": {
              "submissionId": {
                "type": "string",
                "example": "sub12345678"
              },
              "jobId": {
                "type": "string",
                "example": "fgsd365345we5ew4"
              },
              "jobRefrenceId": {
                "type": "string",
                "example": "ZinexJob123"
              },
              "applicantId": {
                "type": "string",
                "example": "jsldjfjr354325325325l"
              },
              "applicantRefrenceId": {
                "type": "string",
                "example": "Zin123"
              },
              "firstName": {
                "type": "string",
                "example": "Prakash"
              },
              "lastName": {
                "type": "string",
                "example": "selvam"
              },
              "email": {
                "type": "string",
                "example": "praksh@gmail.com"
              },
              "dateOfBirth": {
                "type": "string",
                "example": "10 Jun 1990"
              },
              "gender": {
                "type": "string",
                "example": "male"
              },
              "countryCode": {
                "type": "string",
                "example": "+91"
              },
              "contactNumber": {
                "type": "string",
                "example": 876464654
              },
              "otherContact": {
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "linkedin"
                  },
                  "value": {
                    "type": "string",
                    "example": "linkedin.com"
                  }
                }
              },
              "location": {
                "properties": {
                  "city": {
                    "type": "string",
                    "example": "chennai"
                  },
                  "state": {
                    "type": "string",
                    "example": "Tamilnadu"
                  },
                  "country": {
                    "type": "string",
                    "example": "India"
                  },
                  "pincode": {
                    "type": "string",
                    "example": "Wts2323fsd"
                  }
                }
              },
              "vendorDetails": {
                "properties": {
                  "vendorCompanyName": {
                    "type": "string",
                    "example": "VVS Tech"
                  },
                  "vendorContact": {
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "Arjune"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Reddy"
                      },
                      "contactCountryCode": {
                        "type": "string",
                        "example": "+91"
                      },
                      "contactNumber": {
                        "type": "string",
                        "example": 7200123791
                      },
                      "email": {
                        "type": "string",
                        "example": "email@mail.com"
                      }
                    }
                  }
                }
              },
              "clientDetails": {
                "properties": {
                  "clientName": {
                    "type": "string",
                    "example": "TCS"
                  },
                  "clientContactDetails": {
                    "properties": {
                      "contactType": {
                        "type": "string",
                        "example": "HR"
                      },
                      "firstName": {
                        "type": "string",
                        "example": "sunil"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "chethri"
                      },
                      "coutryCode": {
                        "type": "string",
                        "example": "+91"
                      },
                      "contactNumber": {
                        "type": "string",
                        "example": 9513578624
                      },
                      "email": {
                        "type": "string",
                        "example": "clientmail@gmail.com"
                      }
                    }
                  }
                }
              },
              "resume": {
                "properties": {
                  "resumeUploadName": {
                    "type": "string",
                    "example": "resume.pdf"
                  },
                  "resumeUniqueName": {
                    "type": "string",
                    "example": "12321321resume.pdf"
                  },
                  "resumeLocation": {
                    "type": "string",
                    "example": "s3/submission/resumes/"
                  }
                }
              },
              "relocation": {
                "type": "boolean",
                "example": true
              },
              "jobTitle": {
                "type": "string",
                "example": "Java Developer"
              },
              "workExperienceYears": {
                "type": "integer",
                "format": "int32",
                "example": 7
              },
              "relevantExperienceYears": {
                "type": "integer",
                "format": "int32",
                "example": 4
              },
              "skills": {
                "type": "array",
                "example": [
                  "java",
                  "nodeJs"
                ]
              },
              "certification": {
                "items": {
                  "properties": {
                    "certificationName": {
                      "type": "string",
                      "example": "java Developer"
                    },
                    "certificationNumber": {
                      "type": "string",
                      "example": "ICC12345"
                    },
                    "certificationInstitutionName": {
                      "type": "string",
                      "example": "Realtek technology"
                    }
                  }
                }
              },
              "rating": {
                "type": "integer",
                "format": "int32",
                "example": 5
              },
              "workExperience": {
                "items": {
                  "properties": {
                    "companyName": {
                      "type": "string",
                      "example": "Realtekh"
                    },
                    "jobTitle": {
                      "type": "string",
                      "example": "Jave Developer"
                    },
                    "startDate": {
                      "type": "string",
                      "example": "10 jun, 2024"
                    },
                    "endDate": {
                      "type": "string",
                      "example": "10 jun, 2024"
                    },
                    "currentEmployerStatus": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              },
              "educationDetails": {
                "items": {
                  "properties": {
                    "qualification": {
                      "type": "string",
                      "example": "BE"
                    },
                    "specialization": {
                      "type": "string",
                      "example": "Computer Science"
                    },
                    "grade": {
                      "type": "string",
                      "example": 4
                    },
                    "educationType": {
                      "type": "string",
                      "example": "regular"
                    },
                    "startDate": {
                      "type": "string",
                      "example": "1 jun 2010"
                    },
                    "endDate": {
                      "type": "string",
                      "example": "1 apr 2014"
                    },
                    "university": {
                      "type": "string",
                      "example": "Anna university"
                    },
                    "insititutionName": {
                      "type": "string",
                      "example": "SKR engineering"
                    }
                  }
                }
              },
              "documents": {
                "items": {
                  "properties": {
                    "documentName": {
                      "type": "string",
                      "example": "certificate"
                    },
                    "documentNumber": {
                      "type": "string",
                      "example": "Ex1234"
                    },
                    "documentCountry": {
                      "type": "string",
                      "example": "India"
                    },
                    "documentExpiryDate": {
                      "type": "string",
                      "example": "06 Oct, 2023"
                    },
                    "documentUploadName": {
                      "type": "string",
                      "example": "certificate.pdf"
                    },
                    "documentUniqueName": {
                      "type": "string",
                      "example": "12345certificate.pdf"
                    },
                    "documentLocation": {
                      "type": "string",
                      "example": "s3/documents/"
                    },
                    "documentVerifiedStaus": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              },
              "visa": {
                "properties": {
                  "visaNumber": {
                    "type": "string",
                    "example": "Visa123456"
                  },
                  "visaCountry": {
                    "type": "string",
                    "example": "india"
                  },
                  "visaExpiryDate": {
                    "type": "string",
                    "example": "10 jun, 2024"
                  },
                  "visaUploadName": {
                    "type": "string",
                    "example": "visacopy.pdf"
                  },
                  "visaCopyUniqueName": {
                    "type": "string",
                    "example": "visa123442424.pdf"
                  },
                  "visaCopyLocation": {
                    "type": "string",
                    "example": "/s3/submission/location"
                  }
                }
              },
              "alternateVisa": {
                "properties": {
                  "alternateVisaNumber": {
                    "type": "string",
                    "example": "Visa123456"
                  },
                  "alternateVisaCountry": {
                    "type": "string",
                    "example": "india"
                  },
                  "alternateVisaExpiryDate": {
                    "type": "string",
                    "example": "10 jun, 2024"
                  },
                  "alternateVisaUploadName": {
                    "type": "string",
                    "example": "visacopy.pdf"
                  },
                  "alternateVisaCopyUniqueName": {
                    "type": "string",
                    "example": "visa123442424.pdf"
                  },
                  "alternateVisaCopyLocation": {
                    "type": "string",
                    "example": "/s3/submission/location"
                  }
                }
              },
              "passport": {
                "properties": {
                  "passportNumber": {
                    "type": "string",
                    "example": 321432424
                  },
                  "passportExpiryDate": {
                    "type": "string",
                    "example": "02-06-2023"
                  },
                  "passportCountry": {
                    "type": "string",
                    "example": "india"
                  },
                  "passportUploadName": {
                    "type": "string",
                    "example": "passpor.pdf"
                  },
                  "passportCopyUniqueName": {
                    "type": "string",
                    "example": "02-06-2023.pdf"
                  },
                  "passportCopyLocation": {
                    "type": "string",
                    "example": "/s3/submission/location"
                  }
                }
              },
              "employerDetails": {
                "properties": {
                  "employerName": {
                    "type": "string",
                    "example": "Reatlekh"
                  },
                  "contactPersonName": {
                    "type": "string",
                    "example": "vinoth"
                  },
                  "contactPersonEmail": {
                    "type": "string",
                    "example": "vinoth@realtekhconsulting.net"
                  },
                  "contactCountryCode": {
                    "type": "string",
                    "example": "+91"
                  },
                  "contactNumber": {
                    "type": "string",
                    "example": 7894561230
                  },
                  "comments": {
                    "type": "string",
                    "example": "testing"
                  }
                }
              },
              "workAuthorization": {
                "type": "string",
                "example": "C2c"
              },
              "rateDetails": {
                "properties": {
                  "acceptedRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 23
                  },
                  "currency": {
                    "type": "string",
                    "example": "INR"
                  },
                  "currencySymbol": {
                    "type": "string",
                    "example": "$"
                  },
                  "payUnit": {
                    "type": "string",
                    "example": "Monthly"
                  },
                  "rateNegotiable": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "interviewAvailability": {
                "properties": {
                  "interviewAvailabilityDate": {
                    "type": "string",
                    "example": "10 jun, 2024"
                  },
                  "timeZone": {
                    "type": "string",
                    "example": "+5.00"
                  },
                  "startTime": {
                    "type": "string",
                    "example": "5.00 pm"
                  },
                  "endTime": {
                    "type": "string",
                    "example": "6.00 pm"
                  }
                }
              },
              "tentativeDate": {
                "type": "string",
                "example": "1 Aug, 2023"
              },
              "internalSubmissionStatus": {
                "properties": {
                  "internalSubmissonStatusId": {
                    "type": "integer",
                    "example": 1
                  },
                  "internalSubmissionStatusText": {
                    "type": "string",
                    "example": "Waiting for evaluation"
                  },
                  "internalSubmissionNotes": {
                    "type": "string",
                    "example": "Candidate notes"
                  },
                  "rejectStatus": {
                    "type": "boolean",
                    "example": true
                  },
                  "rejectLog": {
                    "properties": {
                      "rejectReasonId": {
                        "type": "string",
                        "example": " "
                      },
                      "rejectReason": {
                        "type": "string",
                        "example": " "
                      },
                      "rejectReasonComments": {
                        "type": "string",
                        "example": " "
                      }
                    }
                  }
                }
              },
              "clientSubmissionStatus": {
                "properties": {
                  "clientSubmissonStatusId": {
                    "type": "string",
                    "example": " "
                  },
                  "clientSubmissionStatusText": {
                    "type": "string",
                    "example": " "
                  },
                  "clientSubmissionNotes": {
                    "type": "string",
                    "example": " "
                  }
                }
              },
              "hiredStatus": {
                "type": "boolean",
                "example": false
              },
              "submittedAt": {
                "type": "string",
                "example": "5.30pm 2 May ,2023"
              },
              "submittedBy": {
                "type": "string",
                "example": "Prakash"
              },
              "updatedAt": {
                "type": "string",
                "example": "5.30pm 2 May ,2023"
              },
              "updatedBy": {
                "type": "string",
                "example": "murali"
              },
              "submissionType": {
                "type": "string",
                "example": "Submission"
              },
              "submissionChannel": {
                "type": "string",
                "example": "internal"
              },
              "recruiterComments": {
                "type": "string",
                "example": "recruiter comments here"
              }
            }
          }
        }
      },
      "StatusReq": {
        "required": [
          "jobStatus"
        ],
        "properties": {
          "jobStatus": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Inactive-On Hold",
              "Fulfilled"
            ]
          },
          "closureRating": {
            "type": "string",
            "example": "easy"
          },
          "jobOwnerId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "targetSubmission": {
            "type": "integer",
            "format": "int32",
            "example": 40
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "incremental"
            ]
          },
          "priorityFrom": {
            "type": "string",
            "example": "07-07-2023"
          },
          "recruiters": {
            "items": {
              "properties": {
                "recruiterId": {
                  "type": "integer",
                  "format": "int32",
                  "example": 3
                }
              }
            }
          },
          "jobPayDetails": {
            "properties": {
              "instructPayrateStart": {
                "type": "integer",
                "format": "int32",
                "example": 15
              },
              "instructPayrateEnd": {
                "type": "integer",
                "format": "int32",
                "example": 20
              },
              "instructPayrateCurrency": {
                "type": "string",
                "example": "usd"
              },
              "instructPayrateUnit": {
                "type": "string",
                "example": "Month"
              }
            }
          },
          "jobActivity": {
            "items": {
              "properties": {
                "activityComments": {
                  "type": "string",
                  "example": "test-run"
                }
              }
            }
          }
        }
      },
      "StatusRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Job Status has been updated successfully and Activity is recorded."
          }
        }
      },
      "ScreeningReq": {
        "properties": {
          "callResponse": {
            "type": "string",
            "example": "answered"
          },
          "responseType": {
            "type": "string",
            "example": "intrested in the opening"
          },
          "responseComments": {
            "type": "string",
            "example": "your comments"
          },
          "workAuthorization": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "taxTerms": {
            "type": "string",
            "example": "tax term"
          },
          "releventExperience": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "vendorId": {
            "type": "string",
            "example": "fdsfs3223532523532"
          },
          "vendorContactId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "notifyComments": {
            "type": "string",
            "example": " "
          },
          "date": {
            "type": "string",
            "example": "04-05-2023"
          },
          "time": {
            "type": "string",
            "example": "10:45am"
          },
          "assignTo": {
            "type": "integer",
            "format": "int32",
            "example": 4
          }
        }
      },
      "ScreeningRes": {
        "properties": {
          "messages": {
            "type": "string",
            "example": "updated Successfully"
          }
        }
      },
      "Screeningtype": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "responseType": {
            "type": "string",
            "example": "Intrested in the job"
          },
          "responseCode": {
            "type": "string",
            "example": "positive"
          }
        }
      },
      "maildetailsreq": {
        "properties": {
          "jobId": {
            "type": "string",
            "example": "43rsrew353werw5435"
          },
          "candidateId": {
            "type": "array",
            "example": [
              "sdfsfwew3453",
              "23432423434",
              "fsdesfrew432"
            ]
          }
        }
      },
      "maildetails": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "properties": {
              "subject": {
                "type": "string",
                "example": "test mail subject"
              },
              "to": {
                "type": "string",
                "example": "to@gmail.com"
              },
              "from": {
                "type": "string",
                "example": "from@gmail.com"
              },
              "content": {
                "type": "string",
                "example": "Dear [Recipient],<br>I am writing to express my interest in the [Job Title] position that has recently become available at [Company Name]. I came across this opportunity on [source of job listing], and I was immediately impressed by the company's reputation for [insert relevant information about the company that appeals to you, such as their innovative approach to the industry, their commitment to sustainability, etc.].As someone with [insert relevant experience or skills that match the requirements of the job], I believe I would be an excellent fit for this position. <br> In my current role at [Company Name], I have gained extensive experience in [insert relevant experience or accomplishments that demonstrate your qualifications for the job]. I am excited about the prospect of applying these skills and experience to a new challenge and making a positive contribution to [Company Name]. <br> Please find attached my resume for your review. I would be happy to provide any additional information or references that you may require. Thank you for considering my application. I look forward to the opportunity to discuss my qualifications further.<br>Best regards,<br>[Your Name]."
              }
            }
          }
        }
      },
      "submissionList": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "properties": {
              "count": {
                "properties": {
                  "total": {
                    "type": "integer",
                    "format": "int32",
                    "example": 200
                  }
                }
              },
              "pagination": {
                "properties": {
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3
                  },
                  "offset": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3
                  }
                }
              },
              "sourceType": {
                "type": "string",
                "example": "internal"
              },
              "submissionList": {
                "items": {
                  "properties": {
                    "jobDetails": {
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "afasfsd2423432"
                        },
                        "jobTitle": {
                          "type": "string",
                          "example": "..Net Developer"
                        },
                        "numberOfPosition": {
                          "type": "integer",
                          "format": "int32",
                          "example": 5
                        },
                        "targetSubmission": {
                          "type": "integer",
                          "format": "int32",
                          "example": 5
                        },
                        "experience": {
                          "properties": {
                            "experienceRequiredFrom": {
                              "type": "integer",
                              "format": "int32",
                              "example": 5
                            },
                            "experienceRequiredTo": {
                              "type": "integer",
                              "format": "int32",
                              "example": 5
                            },
                            "experienceRequiredUnit": {
                              "type": "string",
                              "example": "years"
                            }
                          }
                        }
                      }
                    },
                    "totalSubmissions": {
                      "type": "integer",
                      "format": "int32",
                      "example": 5
                    },
                    "applicantlist": {
                      "items": {
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "63e5d72f83e05210a0217c70"
                          },
                          "submissionRefrenceId": {
                            "type": "string",
                            "example": "Sub121"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "Prakash"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "selvam"
                          },
                          "applicantId": {
                            "type": "string",
                            "example": "63b57588fd768a839dbc0f62"
                          },
                          "applicantRefrenceId": {
                            "type": "string",
                            "example": "zinxt121"
                          },
                          "submissionStatus": {
                            "type": "string",
                            "example": "waiting for submission"
                          },
                          "submittedBy": {
                            "type": "string",
                            "example": "Murali"
                          },
                          "submittedAt": {
                            "type": "string",
                            "example": "10 May, 2023"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "jobListReq": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "644910000719e750467189ec"
          },
          "jobReferenceId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "searchQuery": {
            "type": "string",
            "example": "java developer"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 12
          }
        }
      },
      "jobListRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "644910000719e750467189ec"
                },
                "jobReferenceId": {
                  "type": "string",
                  "example": "ZNXTJOB230008"
                },
                "jobTitle": {
                  "type": "string",
                  "example": "java developer"
                }
              }
            }
          }
        }
      },
      "submissionReq": {
        "required": [
          "firstName",
          "lastName",
          "email",
          "contactCountryCode",
          "contactNumber",
          "source",
          "jobTitle",
          "skills",
          "workExperienceYears"
        ],
        "properties": {
          "schemaVersion": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "82c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "applicantId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "jobId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "clientId": {
            "type": "string",
            "example": "91c782a4aa626175e5d11afa"
          },
          "recruitingUserId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "submittedBy": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "firstName": {
            "type": "string",
            "example": "nepro"
          },
          "lastName": {
            "type": "string",
            "example": "shitha"
          },
          "email": {
            "type": "string",
            "example": "nepro@gmail.com"
          },
          "contactCountryCode": {
            "type": "string",
            "example": 91
          },
          "contactNumber": {
            "type": "string",
            "example": 5867939048
          },
          "dateOfBirth": {
            "type": "string",
            "example": "17-05-1997"
          },
          "address": {
            "required": [
              "country",
              "state",
              "city",
              "pincode"
            ],
            "properties": {
              "line1": {
                "type": "string",
                "example": "56/2"
              },
              "line2": {
                "type": "string",
                "example": "ponmalai nagar"
              },
              "city": {
                "type": "string",
                "example": "trichy"
              },
              "state": {
                "type": "string",
                "example": "tamilnadu"
              },
              "country": {
                "type": "string",
                "example": "india"
              },
              "pincode": {
                "type": "string",
                "example": 620002
              }
            }
          },
          "workAuthorization": {
            "type": "string",
            "example": "TN visa"
          },
          "source": {
            "type": "string",
            "example": "internal"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "race": {
            "type": "string",
            "example": "South Asian"
          },
          "veteranStatus": {
            "type": "string",
            "example": "no"
          },
          "disability": {
            "type": "string",
            "example": "no"
          },
          "preferredLocation": {
            "type": "array",
            "example": [
              "chennai",
              "mumbai",
              "pune"
            ]
          },
          "currentLocation": {
            "type": "string",
            "example": "chennai"
          },
          "socialProfiles": {
            "items": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "LinkedIn"
                },
                "value": {
                  "type": "string",
                  "example": "nepro"
                }
              }
            }
          },
          "jobTitle": {
            "type": "string",
            "example": "sr.python developer"
          },
          "skills": {
            "type": "array",
            "example": [
              "python",
              "Django",
              "flask",
              "SQL",
              "AWS"
            ]
          },
          "tags": {
            "type": "array",
            "example": [
              "python",
              "SQL"
            ]
          },
          "domain": {
            "type": "string",
            "example": "software development"
          },
          "workExperienceYears": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "workExperience": {
            "required": [
              "jobTitle",
              "companyName",
              "startDate",
              "endDate"
            ],
            "items": {
              "properties": {
                "jobTitle": {
                  "type": "string",
                  "example": "python developer"
                },
                "companyName": {
                  "type": "string",
                  "example": "Realtek"
                },
                "startDate": {
                  "type": "string",
                  "example": "05-03-2020"
                },
                "endDate": {
                  "type": "string",
                  "example": "05-03-2023"
                },
                "currentEmployerStatus": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "educationDetails": {
            "items": {
              "properties": {
                "qualification": {
                  "type": "string",
                  "example": "BE"
                },
                "specialization": {
                  "type": "string",
                  "example": "CSE"
                },
                "university": {
                  "type": "string",
                  "example": "Anna university"
                },
                "grade": {
                  "type": "string",
                  "example": 8
                },
                "educationType": {
                  "type": "string",
                  "example": "Direct education"
                },
                "startDate": {
                  "type": "string",
                  "example": "05-03-2014"
                },
                "endDate": {
                  "type": "string",
                  "example": "05-03-2018"
                },
                "currentlyStudingHere": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          },
          "vendorDetails": {
            "properties": {
              "vendorId": {
                "type": "string",
                "example": "67fjhghbvsbvhvh74j98fr45"
              },
              "vendorContactId": {
                "type": "integer",
                "format": "int32",
                "example": 56
              }
            }
          },
          "passport": {
            "required": [
              "passportNumber",
              "passportCountry",
              "passportExpiryDate"
            ],
            "properties": {
              "passportNumber": {
                "type": "string",
                "example": "74568HGH87"
              },
              "passportExpiryDate": {
                "type": "string",
                "example": "04-05-2027"
              },
              "passportCountry": {
                "type": "string",
                "example": "UK"
              },
              "passportUploadName": {
                "type": "string",
                "example": "passport.pdf"
              },
              "passportCopyUniqueName": {
                "type": "string",
                "example": "uk.passport"
              },
              "passportCopyLocation": {
                "type": "string",
                "example": "s3/passportfolder/passport"
              }
            }
          },
          "visa": {
            "required": [
              "visaNumber",
              "visaCountry",
              "visaExpiryDate"
            ],
            "properties": {
              "visaNumber": {
                "type": "string",
                "example": "7837468HGH87"
              },
              "visaCountry": {
                "type": "string",
                "example": "UK"
              },
              "visaExpiryDate": {
                "type": "string",
                "example": "04-05-2026"
              },
              "visaUploadName": {
                "type": "string",
                "example": "visa.pdf"
              },
              "visaCopyUniqueName": {
                "type": "string",
                "example": "uk.visa"
              },
              "visaCopyLocation": {
                "type": "string",
                "example": "s3/visafolder/visa"
              }
            }
          },
          "alternateVisa": {
            "required": [
              "alternateVisaNumber",
              "alternateVisaExpiryDate",
              "alternateVisaCountry"
            ],
            "properties": {
              "alternateVisaNumber": {
                "type": "string",
                "example": "7837468HGH87"
              },
              "alternateVisaExpiryDate": {
                "type": "string",
                "example": "04-05-2026"
              },
              "alternateVisaCountry": {
                "type": "string",
                "example": "india"
              },
              "alternateVisaUploadName": {
                "type": "string",
                "example": "alternatevisa.pdf"
              },
              "alternateVisaCopyUniqueName": {
                "type": "string",
                "example": "alternatevisa"
              },
              "alternateVisaCopyLocation": {
                "type": "string",
                "example": "s3/alternatevisafolder/alternate"
              }
            }
          },
          "documents": {
            "required": [
              "documentName"
            ],
            "items": {
              "properties": {
                "documentName": {
                  "type": "string",
                  "example": "otherdocument"
                },
                "documentNumber": {
                  "type": "string",
                  "example": "845984jfhj"
                },
                "documentCountry": {
                  "type": "string",
                  "example": "india"
                },
                "documentExpiryDate": {
                  "type": "string",
                  "example": "09-08-2023"
                },
                "documentUploadName": {
                  "type": "string",
                  "example": "otherdocument.pdf"
                },
                "documentUniqueName": {
                  "type": "string",
                  "example": "documenttr"
                },
                "documentLocation": {
                  "type": "string",
                  "example": "s3/otherdocument/sdoc"
                }
              }
            }
          },
          "rateDetails": {
            "properties": {
              "acceptedRate": {
                "type": "integer",
                "format": "int32",
                "example": 56
              },
              "currency": {
                "type": "string",
                "example": "dollar"
              },
              "currencySymbol": {
                "type": "string",
                "example": "$"
              },
              "payUnit": {
                "type": "string",
                "example": "year"
              },
              "rateNegotiable": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "interviewAvailability": {
            "properties": {
              "interviewAvailabilityDate": {
                "type": "string",
                "example": "07-06-2023"
              },
              "timeZone": {
                "type": "string",
                "example": "IST"
              },
              "startTime": {
                "type": "string",
                "example": "10:00"
              },
              "endTime": {
                "type": "string",
                "example": "11:00"
              }
            }
          },
          "tentativeDate": {
            "type": "string",
            "example": "03-07-2023"
          }
        }
      },
      "submissionRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Submission created successfully"
          }
        }
      },
      "communicationRes": {
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "log": {
            "items": {
              "properties": {
                "date": {
                  "type": "string",
                  "example": "14 May, 2023"
                },
                "logs": {
                  "items": {
                    "properties": {
                      "contactType": {
                        "type": "string",
                        "example": "mail"
                      },
                      "contactedBy": {
                        "type": "string",
                        "example": "nole king"
                      },
                      "time": {
                        "type": "string",
                        "example": "11 am"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "updatecallReq": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "applicantId": {
            "type": "string",
            "example": "645cb92d8dc2609a73c98c27"
          },
          "jobId": {
            "type": "string",
            "example": "644910000719e750467189ec"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "workAuthorization": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "taxTerms": {
            "type": "string",
            "example": "c2c"
          },
          "yearOfExperience": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "applicantScreenedResult": {
            "type": "string",
            "example": "rejected"
          },
          "contactResponse": {
            "properties": {
              "responseChannel": {
                "type": "string",
                "example": "not answered"
              },
              "responseType": {
                "type": "string",
                "example": "Not available in the market"
              },
              "comments": {
                "type": "string",
                "example": "candidate not answered"
              }
            }
          }
        }
      },
      "updatecallRes": {
        "properties": {
          "status": {
            "type": "string",
            "example": true
          },
          "data": {
            "type": "string",
            "example": "Candidate Status Updated Successfully"
          }
        }
      },
      "tablistRes": {
        "properties": {
          "status": {
            "type": "string",
            "example": true
          },
          "data": {
            "items": {
              "properties": {
                "title": {
                  "type": "string",
                  "enum": [
                    "active"
                  ]
                },
                "key": {
                  "type": "string",
                  "example": 1
                },
                "count": {
                  "type": "string",
                  "example": 0
                },
                "icon": {
                  "type": "string",
                  "example": "<TabActive />"
                },
                "children": {
                  "items": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "enum": [
                          "unread",
                          "In progress",
                          "Partially Fulfilled",
                          "Fulfilled"
                        ]
                      },
                      "key": {
                        "type": "string",
                        "enum": [
                          "1-1",
                          "1-2",
                          "1-3",
                          "1-4"
                        ]
                      },
                      "count": {
                        "type": "string",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "title": {
            "type": "string",
            "example": "Inactive"
          },
          "key": {
            "type": "string",
            "example": 2
          },
          "count": {
            "type": "string",
            "example": 0
          },
          "icon": {
            "type": "string",
            "example": "<TabUnassigned />"
          },
          "children": {
            "items": {
              "properties": {
                "title": {
                  "type": "string",
                  "enum": [
                    "on hold",
                    "closed"
                  ]
                },
                "key": {
                  "type": "string",
                  "enum": [
                    "3-1",
                    "3-2"
                  ]
                },
                "count": {
                  "type": "string",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "jobEmailReq": {
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "93c782a4aa626175e5d11afa"
          },
          "businessId": {
            "type": "string",
            "example": "83c782a4aa626175e5d11afa"
          },
          "businessUnitId": {
            "type": "string",
            "example": "63b57588fd768a839dbc0f63"
          },
          "jobId": {
            "type": "string",
            "example": "644a3e1fcabc0c960784b69f"
          },
          "candidateId": {
            "type": "string",
            "example": [
              "6454e9a24539fbc67d218dd4",
              "6454e9a24539fbc67d218dd2",
              "6454e9a24539fbc67d218dd0"
            ]
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "jobEmailRes": {
        "properties": {
          "status": {
            "type": "string",
            "example": true
          },
          "data": {
            "properties": {
              "subject": {
                "type": "string",
                "example": "Job Opening for \"golang developer\""
              },
              "from": {
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "allwyn-realtek"
                  },
                  "email": {
                    "type": "string",
                    "example": "allwyn@realtekhconsulting.net"
                  }
                }
              },
              "to": {
                "items": {
                  "$ref": "#/components/schemas/toEmail"
                }
              },
              "content": {
                "$ref": "#/components/schemas/contentEmail"
              }
            }
          }
        }
      },
      "toEmail": {
        "properties": {
          "name": {
            "type": "string",
            "example": "aravinth T"
          },
          "email": {
            "type": "string",
            "example": "aravinth@gmail.com"
          }
        }
      },
      "contentEmail": {
        "properties": {
          "type": {
            "type": "string",
            "example": "text/html"
          },
          "value": {
            "type": "string",
            "example": "<div>JobDetails:\"golang developer\"<br>JobDescription:\"<p>this is easy job</p>\"</div>"
          }
        }
      },
      "dicelogin": {
        "properties": {
          "bearerToken": {
            "type": "string",
            "example": "bearer ca0393c1-e790-54e6-99c7-6949598f9510"
          }
        }
      },
      "diceSearch": {
        "required": [
          "q",
          "location",
          "jobTitle",
          "bearerToken"
        ],
        "properties": {
          "q": {
            "type": "string",
            "example": "java OR python"
          },
          "location": {
            "type": "string",
            "example": "[{'value':'chennai'},{'value':'salem'}]"
          },
          "jobTitle": {
            "type": "string",
            "example": "developer or engineer"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "bearerToken": {
            "type": "string",
            "example": "bearer 09d9750c-86af-5b1a-a125-f7966a54b546"
          }
        }
      },
      "diceSearchRes": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/diceData"
            }
          },
          "filters": {
            "items": {
              "properties": {
                "keys": {
                  "type": "string",
                  "example": "jobTitleKeyword"
                },
                "value": {
                  "type": "string",
                  "example": "developer or engineer"
                }
              }
            }
          },
          "meta": {
            "properties": {
              "page": {
                "type": "integer",
                "example": 1
              },
              "pageSize": {
                "type": "integer",
                "example": 10
              },
              "totalCount": {
                "type": "integer",
                "example": 2198
              }
            }
          },
          "usage": {
            "properties": {
              "customerId": {
                "type": "integer",
                "example": 1563227
              },
              "quota": {
                "type": "integer",
                "example": 24000
              },
              "viewsConsumed": {
                "type": "integer",
                "example": 14687
              },
              "viewsRemaining": {
                "type": "integer",
                "example": 9313
              }
            }
          }
        }
      },
      "diceData": {
        "properties": {
          "candidateId": {
            "type": "string",
            "example": "53b8ed1e-d9f6-45df-94e7-c22ce2091da9"
          },
          "city": {
            "type": "string",
            "example": "Karur"
          },
          "country": {
            "type": "string",
            "example": "India"
          },
          "currentCompany": {
            "type": "string",
            "example": "KSHIN TECH PRIVATE LIMITED"
          },
          "currentJobTitle": {
            "type": "string",
            "example": "Frontend Developer"
          },
          "dateLastActive": {
            "type": "string",
            "example": "2023-05-24T14:32:30.000Z"
          },
          "dateResumeLastUpdated": {
            "type": "string",
            "example": "2023-05-24T14:23:03.156Z"
          },
          "desiredJobTitles": {
            "type": "array",
            "example": [
              "Frontend developer"
            ]
          },
          "education": {
            "items": {
              "properties": {
                "degree": {
                  "type": "string",
                  "example": "Bachelors"
                },
                "location": {
                  "type": "string",
                  "example": "Chennai"
                },
                "org": {
                  "type": "string",
                  "example": "loyola college of engineering"
                }
              }
            }
          },
          "experience": {
            "properties": {
              "current": {
                "properties": {
                  "org": {
                    "type": "string",
                    "example": "KSHIN TECH PRIVATE LIMITED"
                  },
                  "periodEnd": {
                    "properties": {
                      "day": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                      },
                      "month": {
                        "type": "integer",
                        "format": "int32",
                        "example": 3
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32",
                        "example": 2023
                      }
                    }
                  },
                  "periodStart": {
                    "properties": {
                      "day": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                      },
                      "month": {
                        "type": "integer",
                        "format": "int32",
                        "example": 9
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32",
                        "example": 2022
                      }
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Frontend Developer"
                  }
                }
              }
            }
          },
          "history": {
            "items": {
              "properties": {
                "org": {
                  "type": "string",
                  "example": "KSHIN TECH PRIVATE LIMITED"
                },
                "periodEnd": {
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "example": 2023
                    }
                  }
                },
                "periodStart": {
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "example": 9
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "example": 2022
                    }
                  }
                },
                "title": {
                  "type": "string",
                  "example": "Frontend Developer"
                }
              }
            }
          },
          "firstName": {
            "type": "string",
            "example": "Srisangeeth"
          },
          "fullName": {
            "type": "string",
            "example": "Srisangeeth AS"
          },
          "hasEmail": {
            "type": "boolean",
            "example": true
          },
          "hasPhone": {
            "type": "boolean",
            "example": false
          },
          "id": {
            "type": "string",
            "example": "38001987eb8b5613738057b8ebf7469ee39bbb5c"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://talent-search.prod.candidatesearch-prod.dhiaws.com/v2/dice/candidates/090f5d8b-48ea-4640-b7ad-3f75eb5d0138/image"
          },
          "isThirdParty": {
            "type": "boolean",
            "example": false
          },
          "lastName": {
            "type": "string",
            "example": "AS"
          },
          "legacyIds": {
            "type": "array",
            "example": [
              "38001987eb8b5613738057b8ebf7469ee39bbb5c",
              "320d207a48d4212ce6f2629584b7a97d683ca0ee",
              "9858e7b3a0a2b9fc7c99a2f2412dec1a"
            ]
          },
          "likelyToMove": {
            "type": "boolean",
            "example": true
          },
          "likelyToMoveScore": {
            "type": "number",
            "example": 100
          },
          "locations": {
            "items": {
              "properties": {
                "city": {
                  "type": "string",
                  "example": "Karur"
                },
                "country": {
                  "type": "string",
                  "example": "India"
                },
                "countryCode": {
                  "type": "string",
                  "example": "IN"
                },
                "latitude": {
                  "type": "number",
                  "example": 10.9538516998291
                },
                "longitude": {
                  "type": "number",
                  "example": 78.0594863891602
                },
                "postalCode": {
                  "type": "string",
                  "example": 639001
                },
                "region": {
                  "type": "string",
                  "example": "Tamil Nadu"
                },
                "source": {
                  "type": "string",
                  "example": "dice"
                },
                "text": {
                  "type": "string",
                  "example": "Karur, Tamil Nadu, India"
                }
              }
            }
          },
          "region": {
            "type": "string",
            "example": "Tamil Nadu"
          },
          "securityAllowance": {
            "properties": {
              "status": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "skills": {
            "items": {
              "properties": {
                "lastUsed": {
                  "type": "integer",
                  "format": "int32",
                  "example": 2023
                },
                "skill": {
                  "type": "string",
                  "example": "html"
                },
                "yearsUsed": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "socialProfiles": {
            "items": {
              "properties": {
                "icon_64": {
                  "type": "string",
                  "example": "https://dmf1ol3sc7oaa.cloudfront.net/64/dice.png"
                },
                "source": {
                  "type": "string",
                  "example": "Dice"
                }
              }
            }
          },
          "workPermitDocuments": {
            "type": "array",
            "example": [
              "TN Permit Holder"
            ]
          },
          "workPermitLocations": {
            "type": "array",
            "example": [
              "US"
            ]
          },
          "workPreferences": {
            "items": {
              "properties": {
                "annualSalary": {
                  "properties": {
                    "currency": {
                      "type": "string",
                      "example": "USD"
                    },
                    "max": {
                      "type": "number",
                      "example": 0
                    },
                    "min": {
                      "type": "number",
                      "example": 350000
                    }
                  }
                },
                "employmentType": {
                  "type": "array",
                  "example": [
                    "Full-time"
                  ]
                },
                "travelPreference": {
                  "type": "integer",
                  "example": 100
                },
                "willingToRelocate": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "yearsOfExperience": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "diceprofile": {
        "properties": {
          "candidateId": {
            "type": "string",
            "example": "0ef4ed5e-d6d4-4af8-81e3-1f06ca7b7dea"
          },
          "city": {
            "type": "string",
            "example": "Chennai"
          },
          "country": {
            "type": "string",
            "example": "India"
          },
          "dateLastActive": {
            "type": "string",
            "example": "2023-05-21T05:52:57.000Z"
          },
          "dateResumeLastUpdated": {
            "type": "string",
            "example": "2023-05-21T05:48:19.142Z"
          },
          "desiredJobTitles": {
            "type": "array",
            "example": [
              "Front End Developer"
            ]
          },
          "education": {
            "items": {
              "properties": {
                "degree": {
                  "type": "string",
                  "example": "Bachelors"
                },
                "location": {
                  "type": "string",
                  "example": "Dindigul"
                },
                "org": {
                  "type": "string",
                  "example": "Mechanical Engineering"
                }
              }
            }
          },
          "email": {
            "type": "array",
            "example": [
              "wvp-m1g-c58@mail.dice.com"
            ]
          },
          "experience": {
            "properties": {
              "history": {
                "type": "array",
                "example": []
              }
            }
          },
          "firstName": {
            "type": "string",
            "example": "Sibimaran"
          },
          "fullName": {
            "type": "string",
            "example": "Sibimaran T"
          },
          "hasEmail": {
            "type": "boolean",
            "example": true
          },
          "hasPhone": {
            "type": "boolean",
            "example": false
          },
          "id": {
            "type": "string",
            "example": "0ef4ed5e-d6d4-4af8-81e3-1f06ca7b7dea"
          },
          "isThirdParty": {
            "type": "boolean",
            "example": false
          },
          "lastName": {
            "type": "string",
            "example": "T"
          },
          "legacyIds": {
            "type": "array",
            "example": [
              "7313a9e916cf32584c35972ff2be3003e487fb9f",
              "cb2559dc56d089e56865c2861d35c5e8aae2f2b3",
              "c9ea05a60d60275bf9ed546cff00a7dc"
            ]
          },
          "likelyToMove": {
            "type": "boolean",
            "example": true
          },
          "likelyToMoveScore": {
            "type": "number",
            "example": 100
          },
          "locations": {
            "items": {
              "properties": {
                "city": {
                  "type": "string",
                  "example": "Chennai"
                },
                "country": {
                  "type": "string",
                  "example": "India"
                },
                "countryCode": {
                  "type": "string",
                  "example": "IN"
                },
                "latitude": {
                  "type": "number",
                  "example": 12.9155111312866
                },
                "longitude": {
                  "type": "number",
                  "example": 80.1521453857422
                },
                "postalCode": {
                  "type": "string",
                  "example": 600073
                },
                "region": {
                  "type": "string",
                  "example": "Tamil Nadu"
                },
                "source": {
                  "type": "string",
                  "example": "dice"
                },
                "text": {
                  "type": "string",
                  "example": "Chennai, Tamil Nadu, India"
                }
              }
            }
          },
          "phone": {
            "type": "array",
            "example": []
          },
          "region": {
            "type": "string",
            "example": "Tamil Nadu"
          },
          "resume": {
            "properties": {
              "contentType": {
                "type": "string",
                "example": "application/pdf"
              },
              "filename": {
                "type": "string",
                "example": "Converted.pdf"
              },
              "resumeData": {
                "type": "string",
                "example": "encrypted resume format"
              },
              "resumeHtml": {
                "type": "string",
                "example": "resume in html"
              }
            }
          },
          "securityAllowance": {
            "properties": {
              "status": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "skills": {
            "items": {
              "properties": {
                "lastUsed": {
                  "type": "integer",
                  "example": 2023
                },
                "skill": {
                  "type": "string",
                  "example": "bitbucket"
                },
                "yearsUsed": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          },
          "socialProfiles": {
            "items": {
              "properties": {
                "icon_64": {
                  "type": "string",
                  "example": "https://dmf1ol3sc7oaa.cloudfront.net/64/linkedin.png"
                },
                "source": {
                  "type": "string",
                  "example": "linkedin"
                },
                "url": {
                  "type": "string",
                  "example": "https://www.linkedin.com/in/sibimarant10"
                }
              }
            }
          },
          "usage": {
            "properties": {
              "customerId": {
                "type": "integer",
                "example": 1563227
              },
              "quota": {
                "type": "integer",
                "example": 24000
              },
              "viewsConsumed": {
                "type": "integer",
                "example": 14687
              },
              "viewsRemaining": {
                "type": "integer",
                "example": 9313
              }
            }
          },
          "workPermitDocuments": {
            "type": "array",
            "example": [
              "TN Permit Holder"
            ]
          },
          "workPermitLocations": {
            "type": "array",
            "example": [
              "US"
            ]
          },
          "workPreferences": {
            "items": {
              "properties": {
                "employmentType": {
                  "type": "array",
                  "example": [
                    "Full-time"
                  ]
                },
                "willingToRelocate": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}